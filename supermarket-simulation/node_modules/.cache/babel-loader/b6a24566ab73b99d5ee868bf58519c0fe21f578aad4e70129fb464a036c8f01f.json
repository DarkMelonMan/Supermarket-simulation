{"ast":null,"code":"var _jsxFileName = \"A:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\ReactJS\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 2\\\\hunter-prey-simulation\\\\src\\\\components\\\\Simulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Simulation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Product {\n  constructor(x, y, cost, ID, groupID, attractive) {\n    this.x = x;\n    this.y = y;\n    this.cost = cost; // цена товара\n    this.ID = ID;\n    this.groupID = groupID; // номер отдела\n    this.size = 6;\n    this.attractive = attractive;\n    if (attractive > 0) this.color = '#30b705';else this.color = '#7FFFD4';\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nclass Stall {\n  constructor(x, y, width, height, ID) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.ID = ID;\n    this.color = '#1E90FF';\n    this.products = [];\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.fill();\n  }\n}\nclass Human {\n  constructor(x, y, speed) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.targetX = 0;\n    this.targetY = 0;\n    this.size = 6;\n    this.direction = Math.PI / 2;\n  }\n  move(width, height, stalls) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance > 0) {\n      // Avoid division by zero if already at target\n      const angle = Math.atan2(dy, dx); // Calculate the angle to the target\n\n      this.x += this.speed * Math.cos(angle);\n      this.y += this.speed * Math.sin(angle);\n\n      // Keep within bounds (optional but good practice)\n      if (this.x < 0) this.x = 0;\n      if (this.x > width) this.x = width;\n      if (this.y < 0) this.y = 0;\n      if (this.y > height) this.y = height;\n    } else {\n      // Already at the target, stop moving or do something else\n      return; // Or set some flag to indicate arrival\n    }\n    this.avoidObstacles(stalls);\n  }\n  avoidObstacles(stalls) {\n    const nearestStall = this.findNearestStall(stalls);\n    if (calculateDistance(this.x, this.y, nearestStall.x, nearestStall.y) < this.size) {\n      this.direction += 0.1; // Small adjustment to avoid the stall\n    }\n  }\n  findNearestStall(stalls, height) {\n    if (!stalls || stalls.length === 0) return null;\n    let nearestStall = null;\n    let shortestDistance = Infinity;\n    for (const stall of stalls) {\n      const distance = Math.min(calculateDistance(this.x, this.y, stall.x, stall.y), calculateDistance(this.x, this.y, stall.x, height - stall.y));\n      if (distance < shortestDistance) {\n        shortestDistance = distance;\n        nearestStall = stall;\n      }\n    }\n    return nearestStall;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Глаз для направления\n    ctx.fillStyle = 'white';\n    ctx.beginPath();\n    ctx.arc(this.x + Math.cos(this.direction) * this.size / 2, this.y + Math.sin(this.direction) * this.size / 2, this.size / 3, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nclass Customer extends Human {\n  constructor(x, y, speed, productsAmountToBuy, productsCount, money) {\n    super(x, y, speed);\n    this.money = money;\n    this.direction = Math.PI / 2;\n    this.size = 6;\n    this.color = '#FF8C00';\n    this.productsAmount = productsAmountToBuy;\n    this.productsToBuy = [];\n    this.checkedShelvesIDs = [];\n    for (let i = 0; i < productsAmountToBuy; i++) {\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\n    }\n  }\n  avoidObstacles(stalls) {\n    const nearestStall = this.findNearestStall(stalls);\n    if (calculateDistance(this.x, this.y, nearestStall.x, nearestStall.y) < this.size && this.checkedShelvesIDs.includes(nearestStall.ID)) {\n      this.direction += 0.1; // Small adjustment to avoid the stall\n    }\n  }\n  findNearestStall(stalls, height) {\n    if (!stalls || stalls.length === 0) return null;\n    let nearestStall = null;\n    let shortestDistance = Infinity;\n    for (const stall of stalls) {\n      const distance = Math.min(calculateDistance(this.x, this.y, stall.x, stall.y), calculateDistance(this.x, this.y, stall.x, height - stall.y));\n      if (distance < shortestDistance && !this.checkedShelvesIDs.includes(stall.ID)) {\n        shortestDistance = distance;\n        nearestStall = stall;\n      }\n    }\n    return nearestStall;\n  }\n  checkStall(stall) {}\n}\nfunction calculateDistance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\nconst Simulation = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const stallsRef = useRef([]);\n  const productsRef = useRef([]);\n  const [params, setParams] = useState({\n    stallsCount: 5,\n    width: 1200,\n    height: 675,\n    isRunning: true,\n    customersCount: 5,\n    speed: 1\n  });\n  const [visibleCount, setVisibleCount] = useState(0);\n\n  // Инициализация\n  const initSimulation = () => {\n    const newStalls = [];\n    const newProducts = [];\n    const stallWidth = 20;\n    const stallHeight = params.height - 250;\n    const distBetweenStalls = (params.width - params.stallsCount * stallWidth) / (params.stallsCount - 1);\n    for (let i = 0; i < params.stallsCount; i++) {\n      const newStall = new Stall(i * stallWidth + i * distBetweenStalls, 50, stallWidth, stallHeight, i + 1);\n      newStalls.push(newStall);\n      for (let j = 0; j < stallHeight / 12; j++) {\n        const newProduct = new Product(i * stallWidth + i * distBetweenStalls + stallWidth / 2, 50 + j * 12 + 3, Math.random() * 1000 + 10, j + 1, i + 1, Math.random() <= 0.25 ? 0 : Math.random() * 90);\n        newStall.products.push(newProduct);\n        newProducts.push(newProduct);\n      }\n    }\n    stallsRef.current = newStalls;\n    productsRef.current = newProducts;\n    setVisibleCount(productsRef.current.length);\n  };\n  const handleParamChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParams(prev => ({\n      ...prev,\n      [name]: parseFloat(value)\n    }));\n  };\n  const toggleSimulation = () => {\n    setParams(prev => ({\n      ...prev,\n      isRunning: !prev.isRunning\n    }));\n  };\n  useEffect(() => {\n    initSimulation();\n  }, [params.stallsCount]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // herbivoresRef.current.forEach(h => {\n      //   h.move(canvas.width, canvas.height);\n      // });\n\n      stallsRef.current.forEach(p => {\n        p.draw(ctx);\n      });\n      productsRef.current.forEach(p => {\n        p.draw(ctx);\n      });\n\n      // herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\n      // setVisibleCount(herbivoresRef.current.length);\n\n      if (params.isRunning) {\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n    if (params.isRunning) {\n      animationFrameId = requestAnimationFrame(animate);\n    } else {\n      // При паузе рисуем текущее состояние\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      stallsRef.current.forEach(p => p.draw(ctx));\n      productsRef.current.forEach(p => p.draw(ctx));\n    }\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [params.isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0442\\u0434\\u0435\\u043B\\u043E\\u0432 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"stallsCount\",\n            min: \"1\",\n            max: \"10\",\n            value: params.stallsCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), params.stallsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043A\\u0443\\u043F\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"customersCount\",\n            min: \"1\",\n            max: \"30\",\n            value: params.customersCountCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), params.stallsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"speed\",\n            min: \"0.5\",\n            max: \"5\",\n            step: \"0.1\",\n            value: params.speed,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), params.speed.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initSimulation,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSimulation,\n          children: params.isRunning ? 'Пауза' : 'Старт'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\"\\u0422\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432: \", visibleCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-area\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: params.width,\n        height: params.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(Simulation, \"WhGiC/hNxiFuw1p7ZjBsRxGVIbk=\");\n_c = Simulation;\nexport default Simulation;\nvar _c;\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Product","constructor","x","y","cost","ID","groupID","attractive","size","color","draw","ctx","fillStyle","beginPath","arc","Math","PI","fill","Stall","width","height","products","fillRect","Human","speed","targetX","targetY","direction","move","stalls","dx","dy","distance","sqrt","angle","atan2","cos","sin","avoidObstacles","nearestStall","findNearestStall","calculateDistance","length","shortestDistance","Infinity","stall","min","Customer","productsAmountToBuy","productsCount","money","productsAmount","productsToBuy","checkedShelvesIDs","i","push","floor","random","includes","checkStall","x1","y1","x2","y2","pow","Simulation","_s","canvasRef","stallsRef","productsRef","params","setParams","stallsCount","isRunning","customersCount","visibleCount","setVisibleCount","initSimulation","newStalls","newProducts","stallWidth","stallHeight","distBetweenStalls","newStall","j","newProduct","current","handleParamChange","e","name","value","target","prev","parseFloat","toggleSimulation","canvas","getContext","animationFrameId","animate","clearRect","forEach","p","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","max","onChange","customersCountCount","step","toFixed","onClick","ref","_c","$RefreshReg$"],"sources":["A:/Проекты/ReactJS/Практика 2/hunter-prey-simulation/src/components/Simulation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Simulation.css';\r\n\r\nclass Product {\r\nconstructor(x, y, cost, ID, groupID, attractive) {\r\n  this.x = x;\r\n  this.y = y;\r\n  this.cost = cost;               // цена товара\r\n  this.ID = ID;\r\n  this.groupID = groupID;         // номер отдела\r\n  this.size = 6;\r\n  this.attractive = attractive;\r\n  if (attractive > 0)\r\n    this.color = '#30b705';\r\n  else this.color = '#7FFFD4';  \r\n  }\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Stall {\r\n  constructor(x, y, width, height, ID) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.ID = ID;\r\n    this.color = '#1E90FF';\r\n    this.products = [];\r\n  }\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Human {\r\n  constructor(x, y, speed) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n    this.targetX = 0;\r\n    this.targetY = 0;\r\n    this.size = 6;\r\n    this.direction = Math.PI / 2;\r\n  }\r\n\r\n  move(width, height, stalls) {\r\n    const dx = this.targetX - this.x;\r\n    const dy = this.targetY - this.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (distance > 0) {  // Avoid division by zero if already at target\r\n      const angle = Math.atan2(dy, dx); // Calculate the angle to the target\r\n\r\n      this.x += this.speed * Math.cos(angle);\r\n      this.y += this.speed * Math.sin(angle);\r\n\r\n      // Keep within bounds (optional but good practice)\r\n      if (this.x < 0) this.x = 0;\r\n      if (this.x > width) this.x = width;\r\n      if (this.y < 0) this.y = 0;\r\n      if (this.y > height) this.y = height;\r\n\r\n    } else {\r\n        // Already at the target, stop moving or do something else\r\n        return; // Or set some flag to indicate arrival\r\n    }\r\n    this.avoidObstacles(stalls);\r\n  }\r\n\r\n  avoidObstacles(stalls) {\r\n      const nearestStall = this.findNearestStall(stalls);\r\n    if (calculateDistance(this.x, this.y, nearestStall.x, nearestStall.y) < this.size) {\r\n      this.direction += 0.1; // Small adjustment to avoid the stall\r\n    }\r\n  }\r\n\r\n  findNearestStall(stalls, height) {\r\n    if (!stalls || stalls.length === 0)\r\n      return null\r\n    let nearestStall = null;\r\n    let shortestDistance = Infinity;\r\n\r\n    for (const stall of stalls) {\r\n      const distance = Math.min(calculateDistance(this.x, this.y, stall.x, stall.y), calculateDistance(this.x, this.y, stall.x, height - stall.y));\r\n\r\n      if (distance < shortestDistance) {\r\n        shortestDistance = distance;\r\n        nearestStall = stall;\r\n      }\r\n    }\r\n    \r\n    return nearestStall;\r\n  }\r\n\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // Глаз для направления\r\n    ctx.fillStyle = 'white';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.x + Math.cos(this.direction) * this.size / 2,\r\n      this.y + Math.sin(this.direction) * this.size / 2,\r\n      this.size / 3,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Customer extends Human {\r\n  constructor(x, y, speed, productsAmountToBuy, productsCount, money) {\r\n    super(x, y, speed);\r\n    this.money = money;\r\n    this.direction = Math.PI / 2;\r\n    this.size = 6;\r\n    this.color = '#FF8C00';\r\n    this.productsAmount = productsAmountToBuy;\r\n    this.productsToBuy = []\r\n    this.checkedShelvesIDs = []\r\n    for (let i = 0; i < productsAmountToBuy; i++) {\r\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\r\n    }\r\n  }\r\n  avoidObstacles(stalls) {\r\n    const nearestStall = this.findNearestStall(stalls);\r\n    if (calculateDistance(this.x, this.y, nearestStall.x, nearestStall.y) < this.size && this.checkedShelvesIDs.includes(nearestStall.ID)) {\r\n      this.direction += 0.1; // Small adjustment to avoid the stall\r\n    }\r\n  }\r\n\r\n  findNearestStall(stalls, height) {\r\n    if (!stalls || stalls.length === 0)\r\n      return null\r\n    let nearestStall = null;\r\n    let shortestDistance = Infinity;\r\n\r\n    for (const stall of stalls) {\r\n      const distance = Math.min(calculateDistance(this.x, this.y, stall.x, stall.y), calculateDistance(this.x, this.y, stall.x, height - stall.y));\r\n\r\n      if (distance < shortestDistance && !this.checkedShelvesIDs.includes(stall.ID)) {\r\n        shortestDistance = distance;\r\n        nearestStall = stall;\r\n      }\r\n    }\r\n    \r\n    return nearestStall;\r\n  }\r\n\r\n  checkStall(stall) {\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction calculateDistance(x1, y1, x2, y2) {\r\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n}\r\n\r\nconst Simulation = () => {\r\n  const canvasRef = useRef(null);\r\n  const stallsRef = useRef([]);\r\n  const productsRef = useRef([]);\r\n  const [params, setParams] = useState({\r\n    stallsCount: 5,\r\n    width: 1200,\r\n    height: 675,\r\n    isRunning: true,\r\n    customersCount: 5,\r\n    speed: 1\r\n  });\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n\r\n  // Инициализация\r\n  const initSimulation = () => {\r\n    const newStalls = [];\r\n    const newProducts = [];\r\n    const stallWidth = 20;\r\n    const stallHeight = params.height - 250;\r\n    const distBetweenStalls = (params.width - params.stallsCount * stallWidth) / (params.stallsCount - 1);\r\n    for (let i = 0; i < params.stallsCount; i++) {\r\n      const newStall = new Stall(\r\n        i * stallWidth + i * distBetweenStalls,\r\n        50,\r\n        stallWidth,\r\n        stallHeight,\r\n        i + 1);\r\n      newStalls.push(newStall);\r\n      for (let j = 0; j < stallHeight / 12; j++) {\r\n        const newProduct = new Product(\r\n          i * stallWidth + i * distBetweenStalls + stallWidth / 2,\r\n          50 + j * 12 + 3,\r\n          Math.random() * 1000 + 10,\r\n          j + 1,\r\n          i + 1,\r\n          Math.random() <= 0.25? 0 : Math.random() * 90)\r\n        newStall.products.push(newProduct);\r\n        newProducts.push(newProduct);\r\n      }\r\n    }\r\n    stallsRef.current = newStalls;\r\n    productsRef.current = newProducts;\r\n    setVisibleCount(productsRef.current.length);\r\n  };\r\n\r\n  const handleParamChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParams(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value)\r\n    }));\r\n  };\r\n\r\n  const toggleSimulation = () => {\r\n    setParams(prev => ({\r\n      ...prev,\r\n      isRunning: !prev.isRunning\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initSimulation();\r\n  }, [params.stallsCount]);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // herbivoresRef.current.forEach(h => {\r\n      //   h.move(canvas.width, canvas.height);\r\n      // });\r\n      \r\n\r\n      stallsRef.current.forEach(p => {\r\n        p.draw(ctx);\r\n      });\r\n\r\n      productsRef.current.forEach(p => {\r\n        p.draw(ctx);\r\n      });\r\n      \r\n      // herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\r\n      // setVisibleCount(herbivoresRef.current.length);\r\n      \r\n      if (params.isRunning) {\r\n        animationFrameId = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    \r\n    if (params.isRunning) {\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    } else {\r\n      // При паузе рисуем текущее состояние\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stallsRef.current.forEach(p => p.draw(ctx));\r\n      productsRef.current.forEach(p => p.draw(ctx));\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [params.isRunning]);\r\n\r\n  return (\r\n    <div className=\"simulation-container\">\r\n      <div className=\"controls\">\r\n        <h2>Управление симуляцией</h2>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество отделов товаров:\r\n            <input\r\n              type=\"range\"\r\n              name=\"stallsCount\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={params.stallsCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.stallsCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество покупателей:\r\n            <input\r\n              type=\"range\"\r\n              name=\"customersCount\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n              value={params.customersCountCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.stallsCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Скорость:\r\n            <input\r\n              type=\"range\"\r\n              name=\"speed\"\r\n              min=\"0.5\"\r\n              max=\"5\"\r\n              step=\"0.1\"\r\n              value={params.speed}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.speed.toFixed(1)} \r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"buttons\">\r\n          <button onClick={initSimulation}>Сбросить</button>\r\n          <button onClick={toggleSimulation}>\r\n            {params.isRunning ? 'Пауза' : 'Старт'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"info\">\r\n          Товаров: {visibleCount}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"simulation-area\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={params.width}\r\n          height={params.height}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Simulation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}