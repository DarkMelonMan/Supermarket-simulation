{"ast":null,"code":"var _jsxFileName = \"A:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\ReactJS\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 2\\\\hunter-prey-simulation\\\\src\\\\components\\\\Simulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Simulation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Product {\n  constructor(x, y, cost, ID, groupID, attractive) {\n    this.x = x;\n    this.y = y;\n    this.cost = cost; // цена товара\n    this.ID = ID;\n    this.groupID = groupID; // номер отдела\n    this.size = 6;\n    this.attractive = attractive;\n    if (attractive > 0) this.color = '#30b705';else this.color = '#7FFFD4';\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nclass Stall {\n  constructor(x, y, width, height, ID) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.ID = ID;\n    this.color = '#1E90FF';\n    this.products = [];\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.fill();\n  }\n  calculateDistanceToStall(x, y) {\n    return Math.min(calculateDistance(x, y, this.x, this.y), calculateDistance(x, y, this.x, this.y + this.height), calculateDistance(x, y, this.x + this.width, this.y), calculateDistance(x, y, this.x + this.width, this.y + this.height));\n  }\n}\nclass Human {\n  constructor(x, y, speed) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.targetX = 0;\n    this.targetY = 0;\n    this.size = 6;\n    this.direction = Math.PI / 2;\n    this.stop = false;\n  }\n  move(width, height, stalls, stallsWidth, stallsHeight, humans) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance > 0 && !this.stop) {\n      // Avoid division by zero if already at target\n      this.direction = Math.atan2(dy, dx); // Calculate the angle to the target\n      this.avoidObstacles(stalls, stallsWidth, stallsHeight, humans);\n      this.x += this.speed * Math.cos(this.direction);\n      this.y += this.speed * Math.sin(this.direction);\n\n      // Keep within bounds (optional but good practice)\n      if (this.x < 0) this.x = 0;\n      if (this.x > width) this.x = width;\n      if (this.y < 0) this.y = 0;\n      if (this.y > height) this.y = height;\n    } else {\n      // Already at the target, stop moving or do something else\n      return; // Or set some flag to indicate arrival\n    }\n  }\n  stopMove() {\n    this.targetX = this.x;\n    this.targetY = this.y;\n    this.stop = true;\n  }\n  avoidObstacles(stalls, stallsWidth, stallsHeight, humans) {\n    let avoidanceForceX = 0;\n    let avoidanceForceY = 0;\n    for (const otherHuman of humans) {\n      if (otherHuman !== this && otherHuman !== null) {\n        const distToHuman = calculateDistance(this.x, this.y, otherHuman.x, otherHuman.y);\n        if (distToHuman < this.size * 2) {\n          const forceMagnitude = (this.size * 2 - distToHuman) * 0.5;\n          avoidanceForceX += forceMagnitude * (this.x - otherHuman.x) / distToHuman;\n          avoidanceForceY += forceMagnitude * (this.y - otherHuman.y) / distToHuman;\n        }\n      }\n    }\n    const nearestStall = this.findNearestStall(stalls);\n    if (nearestStall == null) return;\n    if (calculateDistance(this.x, this.y, nearestStall.x, nearestStall.y) < this.size * 2 || this.x - (nearestStall.x + stallsWidth / 2) < this.size * 2 + stallsWidth / 2 && this.y > nearestStall.y - this.size * 2 && this.y < nearestStall.y + this.size * 2 + stallsHeight) {\n      if (this.x - nearestStall.x - stallsWidth / 2 > 0) this.direction -= Math.PI / 2;else this.direction += Math.PI / 2;\n    }\n    return avoidanceForceX, avoidanceForceY;\n  }\n  findNearestStall(stalls) {\n    if (!stalls || stalls.length === 0) return null;\n    let nearestStall = null;\n    let shortestDistance = Infinity;\n    for (const stall of stalls) {\n      const distance = stall.calculateDistanceToStall(this.x, this.y);\n      if (distance < shortestDistance) {\n        shortestDistance = distance;\n        nearestStall = stall;\n      }\n    }\n    return nearestStall;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Глаз для направления\n    ctx.fillStyle = 'white';\n    ctx.beginPath();\n    ctx.arc(this.x + Math.cos(this.direction) * this.size / 2, this.y + Math.sin(this.direction) * this.size / 2, this.size / 3, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nclass Customer extends Human {\n  constructor(x, y, speed, productsAmountToBuy, productsCount, money) {\n    super(x, y, speed);\n    this.money = money;\n    this.direction = Math.PI / 2;\n    this.size = 6;\n    this.color = '#FF8C00';\n    this.productsAmount = productsAmountToBuy;\n    this.productsToBuy = [];\n    this.checkedStallsIDs = [];\n    for (let i = 0; i < productsAmountToBuy; i++) {\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\n    }\n  }\n  findNearestStallToCheck(stalls, stallsHeight, stallsWidth) {\n    const nearestStall = super.findNearestStall(stalls);\n    if (nearestStall != null && !this.checkedStallsIDs.includes(nearestStall.ID)) {\n      if (Math.abs(this.x - nearestStall.x) < Math.abs(this.x - nearestStall.x - stallsWidth)) this.targetX = nearestStall.x;else this.targetX = nearestStall.x + stallsWidth;\n      this.targetY = nearestStall.y + Math.random() * stallsHeight;\n      return nearestStall;\n    } else if (stalls.length > 1) {\n      const newStalls = stalls.slice();\n      for (let i = 0; i < stalls.length; i++) {\n        if (nearestStall.ID === stalls[i].ID) newStalls.splice(i);\n      }\n      return this.findNearestStall(newStalls, stallsHeight, stallsWidth);\n    } else return null;\n  }\n  checkStalls(stalls, stallsHeight, stallsWidth) {\n    this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\n    const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\n    if (distance < this.size * 2) {\n      this.stopMove();\n    } else return;\n  }\n}\nfunction calculateDistance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\nconst Simulation = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const stallsRef = useRef([]);\n  const productsRef = useRef([]);\n  const customersRef = useRef([]);\n  const [params, setParams] = useState({\n    stallsCount: 5,\n    width: 1200,\n    height: 675,\n    stallsWidth: 20,\n    stallsHeight: 675 - 250,\n    isRunning: true,\n    customersCount: 5,\n    speed: 1\n  });\n  const [visibleCount, setVisibleCount] = useState(0);\n\n  // Инициализация\n  const initSimulation = () => {\n    const newStalls = [];\n    const newProducts = [];\n    const newCustomers = [];\n    const distBetweenStalls = (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1);\n    for (let i = 0; i < params.stallsCount; i++) {\n      const newStall = new Stall(i * params.stallsWidth + i * distBetweenStalls, 50, params.stallsWidth, params.stallsHeight, i + 1);\n      newStalls.push(newStall);\n      for (let j = 0; j < params.stallsHeight / 12; j++) {\n        const newProduct = new Product(i * params.stallsWidth + i * distBetweenStalls + params.stallsWidth / 2, 50 + j * 12 + 3, Math.random() * 1000 + 10, j + 1, i + 1, Math.random() <= 0.25 ? 0 : Math.random() * 90);\n        newStall.products.push(newProduct);\n        newProducts.push(newProduct);\n      }\n    }\n    for (let i = 0; i < params.customersCount; i++) {\n      newCustomers.push(new Customer(Math.random() * params.width, params.height - 6, params.speed, Math.random() * 9 + 1, newProducts.length, Math.random()));\n    }\n    customersRef.current = newCustomers;\n    stallsRef.current = newStalls;\n    productsRef.current = newProducts;\n    setVisibleCount(productsRef.current.length);\n  };\n  const handleParamChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParams(prev => ({\n      ...prev,\n      [name]: parseFloat(value)\n    }));\n  };\n  const toggleSimulation = () => {\n    setParams(prev => ({\n      ...prev,\n      isRunning: !prev.isRunning\n    }));\n  };\n  useEffect(() => {\n    initSimulation();\n  }, [params.stallsCount]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      customersRef.current.forEach(c => {\n        c.checkStalls(stallsRef.current, params.stallsHeight, params.stallsWidth);\n        c.move(canvas.width, canvas.height, stallsRef.current, params.stallsWidth, params.stallsHeight, customersRef.current);\n        c.draw(ctx);\n      });\n      stallsRef.current.forEach(p => {\n        p.draw(ctx);\n      });\n      productsRef.current.forEach(p => {\n        p.draw(ctx);\n      });\n\n      // herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\n      // setVisibleCount(herbivoresRef.current.length);\n\n      if (params.isRunning) {\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n    if (params.isRunning) {\n      animationFrameId = requestAnimationFrame(animate);\n    } else {\n      // При паузе рисуем текущее состояние\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      stallsRef.current.forEach(p => p.draw(ctx));\n      productsRef.current.forEach(p => p.draw(ctx));\n      customersRef.current.forEach(c => c.draw(ctx));\n    }\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [params.isRunning, params.stallsHeight, params.stallsWidth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0442\\u0434\\u0435\\u043B\\u043E\\u0432 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"stallsCount\",\n            min: \"1\",\n            max: \"10\",\n            value: params.stallsCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), params.stallsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043A\\u0443\\u043F\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"customersCount\",\n            min: \"1\",\n            max: \"30\",\n            value: params.customersCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), params.customersCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"speed\",\n            min: \"0.5\",\n            max: \"5\",\n            step: \"0.1\",\n            value: params.speed,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), params.speed.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initSimulation,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSimulation,\n          children: params.isRunning ? 'Пауза' : 'Старт'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\"\\u0422\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432: \", visibleCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-area\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: params.width,\n        height: params.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(Simulation, \"dqbuIMAGbKD8PzrkKZGodEtLG1U=\");\n_c = Simulation;\nexport default Simulation;\nvar _c;\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Product","constructor","x","y","cost","ID","groupID","attractive","size","color","draw","ctx","fillStyle","beginPath","arc","Math","PI","fill","Stall","width","height","products","fillRect","calculateDistanceToStall","min","calculateDistance","Human","speed","targetX","targetY","direction","stop","move","stalls","stallsWidth","stallsHeight","humans","dx","dy","distance","sqrt","atan2","avoidObstacles","cos","sin","stopMove","avoidanceForceX","avoidanceForceY","otherHuman","distToHuman","forceMagnitude","nearestStall","findNearestStall","length","shortestDistance","Infinity","stall","Customer","productsAmountToBuy","productsCount","money","productsAmount","productsToBuy","checkedStallsIDs","i","push","floor","random","findNearestStallToCheck","includes","abs","newStalls","slice","splice","checkStalls","x1","y1","x2","y2","pow","Simulation","_s","canvasRef","stallsRef","productsRef","customersRef","params","setParams","stallsCount","isRunning","customersCount","visibleCount","setVisibleCount","initSimulation","newProducts","newCustomers","distBetweenStalls","newStall","j","newProduct","current","handleParamChange","e","name","value","target","prev","parseFloat","toggleSimulation","canvas","getContext","animationFrameId","animate","clearRect","forEach","c","p","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","max","onChange","step","toFixed","onClick","ref","_c","$RefreshReg$"],"sources":["A:/Проекты/ReactJS/Практика 2/hunter-prey-simulation/src/components/Simulation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Simulation.css';\r\n\r\nclass Product {\r\nconstructor(x, y, cost, ID, groupID, attractive) {\r\n  this.x = x;\r\n  this.y = y;\r\n  this.cost = cost;               // цена товара\r\n  this.ID = ID;\r\n  this.groupID = groupID;         // номер отдела\r\n  this.size = 6;\r\n  this.attractive = attractive;\r\n  if (attractive > 0)\r\n    this.color = '#30b705';\r\n  else this.color = '#7FFFD4';  \r\n  }\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Stall {\r\n  constructor(x, y, width, height, ID) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.ID = ID;\r\n    this.color = '#1E90FF';\r\n    this.products = [];\r\n  }\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    ctx.fill();\r\n  }\r\n  calculateDistanceToStall(x, y) {\r\n  return Math.min(calculateDistance(x, y, this.x, this.y), \r\n      calculateDistance(x, y, this.x, this.y + this.height),\r\n      calculateDistance(x, y, this.x + this.width, this.y),\r\n      calculateDistance(x, y, this.x + this.width, this.y + this.height)\r\n    );\r\n  }\r\n}\r\n\r\nclass Human {\r\n  constructor(x, y, speed) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n    this.targetX = 0;\r\n    this.targetY = 0;\r\n    this.size = 6;\r\n    this.direction = Math.PI / 2;\r\n    this.stop = false;\r\n  }\r\n\r\n  move(width, height, stalls, stallsWidth, stallsHeight, humans) {\r\n    const dx = this.targetX - this.x;\r\n    const dy = this.targetY - this.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (distance > 0 && !this.stop) {  // Avoid division by zero if already at target\r\n      this.direction = Math.atan2(dy, dx); // Calculate the angle to the target\r\n      this.avoidObstacles(stalls, stallsWidth, stallsHeight, humans);\r\n      this.x += this.speed * Math.cos(this.direction);\r\n      this.y += this.speed * Math.sin(this.direction);\r\n\r\n      // Keep within bounds (optional but good practice)\r\n      if (this.x < 0) this.x = 0;\r\n      if (this.x > width) this.x = width;\r\n      if (this.y < 0) this.y = 0;\r\n      if (this.y > height) this.y = height;\r\n    } else {\r\n        // Already at the target, stop moving or do something else\r\n        return; // Or set some flag to indicate arrival\r\n    }\r\n  }\r\n\r\n  stopMove() {\r\n    this.targetX = this.x;\r\n    this.targetY = this.y;\r\n    this.stop = true;\r\n  }\r\n\r\n  avoidObstacles(stalls, stallsWidth, stallsHeight, humans) {\r\n    let avoidanceForceX = 0;\r\n    let avoidanceForceY = 0;\r\n    for (const otherHuman of humans) {\r\n      if (otherHuman !== this && otherHuman !== null) { \r\n        const distToHuman = calculateDistance(this.x, this.y, otherHuman.x, otherHuman.y);\r\n        if (distToHuman < this.size * 2) {\r\n          const forceMagnitude = (this.size * 2 - distToHuman) * 0.5;\r\n          avoidanceForceX += forceMagnitude * (this.x - otherHuman.x) / distToHuman;\r\n          avoidanceForceY += forceMagnitude * (this.y - otherHuman.y) / distToHuman;\r\n        }\r\n      }\r\n    }\r\n    const nearestStall = this.findNearestStall(stalls);\r\n    if (nearestStall == null) return;\r\n    if (calculateDistance(this.x, this.y, nearestStall.x, nearestStall.y) < this.size * 2 || \r\n    (this.x - (nearestStall.x + stallsWidth / 2) < this.size * 2 + stallsWidth / 2 && this.y > nearestStall.y - this.size * 2 && this.y < nearestStall.y + this.size * 2 + stallsHeight)) {\r\n      if (this.x - nearestStall.x - stallsWidth / 2 > 0)\r\n        this.direction -= Math.PI / 2;\r\n      else this.direction += Math.PI / 2;\r\n    }\r\n    return (avoidanceForceX, avoidanceForceY);\r\n  }\r\n\r\n  findNearestStall(stalls) {\r\n    if (!stalls || stalls.length === 0)\r\n      return null\r\n    let nearestStall = null;\r\n    let shortestDistance = Infinity;\r\n\r\n    for (const stall of stalls) {\r\n      const distance = stall.calculateDistanceToStall(this.x, this.y);\r\n\r\n      if (distance < shortestDistance) {\r\n        shortestDistance = distance;\r\n        nearestStall = stall;\r\n      }\r\n    }\r\n    \r\n    return nearestStall;\r\n  }\r\n\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // Глаз для направления\r\n    ctx.fillStyle = 'white';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.x + Math.cos(this.direction) * this.size / 2,\r\n      this.y + Math.sin(this.direction) * this.size / 2,\r\n      this.size / 3,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Customer extends Human {\r\n  constructor(x, y, speed, productsAmountToBuy, productsCount, money) {\r\n    super(x, y, speed);\r\n    this.money = money;\r\n    this.direction = Math.PI / 2;\r\n    this.size = 6;\r\n    this.color = '#FF8C00';\r\n    this.productsAmount = productsAmountToBuy;\r\n    this.productsToBuy = []\r\n    this.checkedStallsIDs = []\r\n    for (let i = 0; i < productsAmountToBuy; i++) {\r\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\r\n    }\r\n  }\r\n\r\n  findNearestStallToCheck(stalls, stallsHeight, stallsWidth) {\r\n    const nearestStall = super.findNearestStall(stalls);\r\n    if (nearestStall != null && !this.checkedStallsIDs.includes(nearestStall.ID)){\r\n\r\n    if (Math.abs(this.x - nearestStall.x) < Math.abs(this.x - nearestStall.x - stallsWidth))\r\n    this.targetX = nearestStall.x;\r\n    else this.targetX = nearestStall.x + stallsWidth;\r\n    this.targetY = nearestStall.y + Math.random() * stallsHeight;\r\n    return nearestStall;\r\n    }\r\n    else if (stalls.length > 1) {\r\n      const newStalls = stalls.slice();\r\n      for (let i = 0; i < stalls.length; i++) {\r\n        if (nearestStall.ID === stalls[i].ID)\r\n          newStalls.splice(i);\r\n      }\r\n      return this.findNearestStall(newStalls, stallsHeight, stallsWidth);\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  checkStalls(stalls, stallsHeight, stallsWidth) {\r\n    this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\r\n    const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\r\n    if (distance < this.size * 2) {\r\n      this.stopMove();\r\n    }\r\n    else return;\r\n  }\r\n}\r\n\r\nfunction calculateDistance(x1, y1, x2, y2) {\r\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n}\r\n\r\nconst Simulation = () => {\r\n  const canvasRef = useRef(null);\r\n  const stallsRef = useRef([]);\r\n  const productsRef = useRef([]);\r\n  const customersRef = useRef([]);\r\n  const [params, setParams] = useState({\r\n    stallsCount: 5,\r\n    width: 1200,\r\n    height: 675,\r\n    stallsWidth: 20,\r\n    stallsHeight: 675 - 250,\r\n    isRunning: true,\r\n    customersCount: 5,\r\n    speed: 1\r\n  });\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n\r\n  // Инициализация\r\n  const initSimulation = () => {\r\n    const newStalls = [];\r\n    const newProducts = [];\r\n    const newCustomers = [];\r\n    const distBetweenStalls = (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1);\r\n    for (let i = 0; i < params.stallsCount; i++) {\r\n      const newStall = new Stall(\r\n        i * params.stallsWidth + i * distBetweenStalls,\r\n        50,\r\n        params.stallsWidth,\r\n        params.stallsHeight,\r\n        i + 1);\r\n      newStalls.push(newStall);\r\n      for (let j = 0; j < params.stallsHeight / 12; j++) {\r\n        const newProduct = new Product(\r\n          i * params.stallsWidth + i * distBetweenStalls + params.stallsWidth / 2,\r\n          50 + j * 12 + 3,\r\n          Math.random() * 1000 + 10,\r\n          j + 1,\r\n          i + 1,\r\n          Math.random() <= 0.25? 0 : Math.random() * 90)\r\n        newStall.products.push(newProduct);\r\n        newProducts.push(newProduct);\r\n      }\r\n    }\r\n    for (let i = 0; i < params.customersCount; i++) {\r\n      newCustomers.push(new Customer(Math.random() * params.width, \r\n      params.height - 6, \r\n      params.speed, \r\n      Math.random() * 9 + 1,\r\n      newProducts.length,\r\n      Math.random()))\r\n    }\r\n    customersRef.current = newCustomers;\r\n    stallsRef.current = newStalls;\r\n    productsRef.current = newProducts;\r\n    setVisibleCount(productsRef.current.length);\r\n  };\r\n\r\n  const handleParamChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParams(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value)\r\n    }));\r\n  };\r\n\r\n  const toggleSimulation = () => {\r\n    setParams(prev => ({\r\n      ...prev,\r\n      isRunning: !prev.isRunning\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initSimulation();\r\n  }, [params.stallsCount]);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      customersRef.current.forEach(c => {\r\n        c.checkStalls(stallsRef.current, params.stallsHeight, params.stallsWidth);\r\n        c.move(canvas.width, canvas.height, stallsRef.current, params.stallsWidth, params.stallsHeight, customersRef.current);\r\n        c.draw(ctx);\r\n      });\r\n      \r\n\r\n      stallsRef.current.forEach(p => {\r\n        p.draw(ctx);\r\n      });\r\n\r\n      productsRef.current.forEach(p => {\r\n        p.draw(ctx);\r\n      });\r\n      \r\n      // herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\r\n      // setVisibleCount(herbivoresRef.current.length);\r\n      \r\n      if (params.isRunning) {\r\n        animationFrameId = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    \r\n    if (params.isRunning) {\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    } else {\r\n      // При паузе рисуем текущее состояние\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stallsRef.current.forEach(p => p.draw(ctx));\r\n      productsRef.current.forEach(p => p.draw(ctx));\r\n      customersRef.current.forEach(c => c.draw(ctx));\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [params.isRunning, params.stallsHeight, params.stallsWidth]);\r\n\r\n  return (\r\n    <div className=\"simulation-container\">\r\n      <div className=\"controls\">\r\n        <h2>Управление симуляцией</h2>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество отделов товаров:\r\n            <input\r\n              type=\"range\"\r\n              name=\"stallsCount\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={params.stallsCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.stallsCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество покупателей:\r\n            <input\r\n              type=\"range\"\r\n              name=\"customersCount\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n              value={params.customersCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.customersCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Скорость:\r\n            <input\r\n              type=\"range\"\r\n              name=\"speed\"\r\n              min=\"0.5\"\r\n              max=\"5\"\r\n              step=\"0.1\"\r\n              value={params.speed}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.speed.toFixed(1)} \r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"buttons\">\r\n          <button onClick={initSimulation}>Сбросить</button>\r\n          <button onClick={toggleSimulation}>\r\n            {params.isRunning ? 'Пауза' : 'Старт'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"info\">\r\n          Товаров: {visibleCount}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"simulation-area\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={params.width}\r\n          height={params.height}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Simulation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}