{"ast":null,"code":"var _jsxFileName = \"A:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\ReactJS\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 2\\\\hunter-prey-simulation\\\\src\\\\components\\\\Simulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Simulation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Product {\n  constructor(x, y, cost, ID, stall, attractive) {\n    this.x = x;\n    this.y = y;\n    this.cost = cost; // цена товара\n    this.ID = ID;\n    this.stall = stall;\n    this.size = 6;\n    this.attractive = attractive;\n    if (attractive > 0) this.color = '#30b705';else this.color = '#7FFFD4';\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n  checkNearby() {\n    const productsNearby = [];\n    const productIndex = this.stall.products.indexOf(this);\n    if (productIndex > 0) productsNearby.push(this.stall.products[productIndex - 1]);\n    if (productIndex < this.stall.products.length - 1) productsNearby.push(this.stall.products[productIndex + 1]);\n    return productsNearby;\n  }\n}\nclass Stall {\n  constructor(x, y, width, height, ID) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.ID = ID;\n    this.color = '#1E90FF';\n    this.products = [];\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.fill();\n  }\n  calculateDistanceToStall(x, y) {\n    return Math.min(calculateDistance(x, y, this.x, this.y), calculateDistance(x, y, this.x, this.y + this.height), calculateDistance(x, y, this.x + this.width, this.y), calculateDistance(x, y, this.x + this.width, this.y + this.height));\n  }\n}\nclass Human {\n  constructor(x, y, speed) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.targetX = 0;\n    this.targetY = 0;\n    this.size = 6;\n    this.direction = Math.PI / 2;\n    this.stop = false;\n  }\n  move(width, height, stalls, stallsWidth, stallsHeight, humans) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance > 0 && !this.stop) {\n      // Avoid division by zero if already at target\n      this.direction = Math.atan2(dy, dx); // Calculate the angle to the target\n\n      const avoidanceForce = this.avoidObstacles(stalls, stallsWidth, stallsHeight, humans);\n      const combinedAngle = Math.atan2(dy + avoidanceForce[1], dx + avoidanceForce[0]);\n      this.direction = combinedAngle;\n      this.x += this.speed * Math.cos(this.direction);\n      this.y += this.speed * Math.sin(this.direction);\n\n      // Keep within bounds (optional but good practice)\n      if (this.x < 0) this.x = 0;\n      if (this.x > width) this.x = width;\n      if (this.y < 0) this.y = 0;\n      if (this.y > height) this.y = height;\n    } else {\n      // Already at the target, stop moving or do something else\n      return; // Or set some flag to indicate arrival\n    }\n  }\n  stopMove() {\n    this.targetX = this.x;\n    this.targetY = this.y;\n    this.stop = true;\n  }\n  avoidObstacles(stalls, stallsWidth, stallsHeight, humans) {\n    let avoidanceForceX = 0;\n    let avoidanceForceY = 0;\n    for (const otherHuman of humans) {\n      if (otherHuman !== this && otherHuman !== null) {\n        const distToHuman = calculateDistance(this.x, this.y, otherHuman.x, otherHuman.y);\n        if (distToHuman < this.size * 2) {\n          const forceMagnitude = (this.size * 2 - distToHuman) * 1;\n          avoidanceForceX += forceMagnitude * (this.x - otherHuman.x) / distToHuman;\n          avoidanceForceY += forceMagnitude * (this.y - otherHuman.y) / distToHuman;\n        }\n      }\n    }\n    const nearestStall = this.findNearestStall(stalls);\n    if (nearestStall == null) return;\n    let distToStall = Infinity;\n    if (this.y > nearestStall.y && this.y < nearestStall.y + stallsHeight) {\n      distToStall = this.x > nearestStall.x ? this.x - nearestStall.x - stallsWidth : nearestStall.x - this.x;\n      if (distToStall < this.size * 2) {\n        const forceMagnitude = (this.size * 2 - distToStall) * 1;\n        avoidanceForceX += forceMagnitude * (this.x - nearestStall.x) / distToStall;\n      }\n    } else {\n      distToStall = nearestStall.calculateDistanceToStall(this.x, this.y);\n      if (distToStall < this.size * 2) {\n        const forceMagnitude = (this.size * 2 - distToStall) * 1;\n        const distX = this.x > nearestStall.x ? this.x - nearestStall.x - stallsWidth : this.x - nearestStall.x;\n        const distY = this.y > nearestStall.y ? this.y - nearestStall.y - stallsHeight : this.y - nearestStall.y;\n        avoidanceForceX += forceMagnitude * distX / distToStall;\n        avoidanceForceY += forceMagnitude * distY / distToStall;\n      }\n    }\n    return [avoidanceForceX, avoidanceForceY];\n  }\n  findNearestStall(stalls) {\n    if (!stalls || stalls.length === 0) return null;\n    let nearestStall = null;\n    let shortestDistance = Infinity;\n    for (const stall of stalls) {\n      const distance = stall.calculateDistanceToStall(this.x, this.y);\n      if (distance < shortestDistance) {\n        shortestDistance = distance;\n        nearestStall = stall;\n      }\n    }\n    return nearestStall;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nclass Customer extends Human {\n  constructor(x, y, speed, productsAmountToBuy, productsCount, money) {\n    super(x, y, speed);\n    this.money = money;\n    this.direction = Math.PI / 2;\n    this.size = 6;\n    this.color = '#FF8C00';\n    this.uselessProductsCount = 0;\n    this.productsToBuy = [];\n    this.productsTaken = [];\n    this.checkedStallsIDs = [];\n    this.checking = false;\n    for (let i = 0; i < productsAmountToBuy; i++) {\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\n    }\n  }\n  findNearestStallToCheck(stalls, stallsHeight, stallsWidth) {\n    const nearestStall = super.findNearestStall(stalls);\n    if (nearestStall != null && !this.checkedStallsIDs.includes(nearestStall.ID) && !this.checking) {\n      if (Math.abs(this.x - nearestStall.x) < Math.abs(this.x - nearestStall.x - stallsWidth)) this.targetX = nearestStall.x - this.size;else this.targetX = nearestStall.x + stallsWidth + this.size;\n      this.targetY = nearestStall.y + Math.random() * stallsHeight;\n      return nearestStall;\n    } else if (stalls.length > 1 && nearestStall != null) {\n      let newStalls = stalls.slice();\n      for (let i = 0; i < stalls.length; i++) {\n        if (nearestStall.ID === stalls[i].ID) newStalls = newStalls.splice(i, 1);\n      }\n      return this.findNearestStall(newStalls, stallsHeight, stallsWidth);\n    } else return null;\n  }\n  checkStalls(stalls, stallsHeight, stallsWidth, distBetweenStalls) {\n    const nearestStall = this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\n    if (nearestStall === null) return;\n    if (this.y > nearestStall.y && this.y < nearestStall.y + stallsHeight) {\n      if (this.targetX < this.x - distBetweenStalls - this.size * 2 || this.targetX > this.x + distBetweenStalls + this.size * 2) {\n        this.targetX = this.x;\n        this.targetY = Math.abs(this.y - nearestStall.y) < Math.abs(this.y - nearestStall.y - stallsHeight) ? nearestStall.y - this.size * 2 : nearestStall.y + stallsHeight + this.size * 2;\n        return;\n      }\n    }\n    const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\n    if (distance < this.size * 2 || this.checking) {\n      const productOrder = this.checkForProducts(nearestStall);\n      this.checking = true;\n      while (productOrder.length > 0 && productOrder[0] !== null) {\n        const product = productOrder[0];\n        this.targetX = product.x;\n        this.targetY = product.y;\n        if (calculateDistance(this.x, this.y, product.x, product.y) < this.size * 2) {\n          this.takeProduct(productOrder[0]);\n          productOrder.splice(0);\n        } else break;\n      }\n      if (productOrder.length === 0) {\n        this.checkedStallsIDs.push(nearestStall.ID);\n        this.checking = false;\n      }\n    } else return;\n  }\n  takeProduct(product) {\n    this.productsTaken.push(product);\n    for (const productNearby of product.checkNearby()) {\n      if (Math.random() * 100 < productNearby.attractive) {\n        this.uselessProductsCount++;\n        this.productsTaken.push(productNearby);\n        productNearby.stall.products.splice(productNearby.stall.products.indexOf(productNearby));\n      }\n    }\n    product.stall.products.splice(product.stall.products.indexOf(product));\n  }\n  checkForProducts(stall) {\n    const productsOrder = [];\n    for (const product of stall.products) {\n      if (this.productsToBuy.includes(product.ID)) {\n        productsOrder.push(product);\n      }\n    }\n    productsOrder.sort((a, b) => calculateDistance(this.x, this.y, a.x, a.y) - calculateDistance(this.x, this.y, b.x, b.y));\n    return productsOrder;\n  }\n}\nfunction calculateDistance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\nconst Simulation = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const stallsRef = useRef([]);\n  const customersRef = useRef([]);\n  const [params, setParams] = useState({\n    stallsCount: 5,\n    width: 1200,\n    height: 675,\n    stallsWidth: 20,\n    stallsHeight: 675 - 250,\n    isRunning: true,\n    customersCount: 5,\n    speed: 1\n  });\n  const [visibleCount, setVisibleCount] = useState(0);\n\n  // Инициализация\n  const initSimulation = () => {\n    const newStalls = [];\n    const newProducts = [];\n    const newCustomers = [];\n    const distBetweenStalls = (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1);\n    for (let i = 0; i < params.stallsCount; i++) {\n      const newStall = new Stall(i * params.stallsWidth + i * distBetweenStalls, 50, params.stallsWidth, params.stallsHeight, i + 1);\n      newStalls.push(newStall);\n      for (let j = 0; j < params.stallsHeight / 12; j++) {\n        const newProduct = new Product(i * params.stallsWidth + i * distBetweenStalls + params.stallsWidth / 2, 50 + j * 12 + 3, Math.random() * 1000 + 10, j + 1 + i * (Math.floor(params.stallsHeight / 12) + 1), newStall, Math.random() <= 0.5 ? 0 : Math.random() * 90);\n        newStall.products.push(newProduct);\n        newProducts.push(newProduct);\n      }\n    }\n    for (let i = 0; i < params.customersCount; i++) {\n      newCustomers.push(new Customer(Math.random() * params.width, params.height - 6, params.speed, Math.random() * 9 + 1, newProducts.length, Math.random()));\n    }\n    customersRef.current = newCustomers;\n    stallsRef.current = newStalls;\n    setVisibleCount(stallsRef.current[0].products.length * params.stallsCount);\n  };\n  const handleParamChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParams(prev => ({\n      ...prev,\n      [name]: parseFloat(value)\n    }));\n  };\n  const toggleSimulation = () => {\n    setParams(prev => ({\n      ...prev,\n      isRunning: !prev.isRunning\n    }));\n  };\n  useEffect(() => {\n    initSimulation();\n  }, [params.stallsCount]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      customersRef.current.forEach(c => {\n        c.checkStalls(stallsRef.current, params.stallsHeight, params.stallsWidth, (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1));\n        c.move(canvas.width, canvas.height, stallsRef.current, params.stallsWidth, params.stallsHeight, customersRef.current);\n        c.draw(ctx);\n      });\n      stallsRef.current.forEach(p => {\n        p.draw(ctx);\n        p.products.forEach(pr => pr.draw(ctx));\n      });\n\n      // herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\n      // setVisibleCount(herbivoresRef.current.length);\n\n      if (params.isRunning) {\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n    if (params.isRunning) {\n      animationFrameId = requestAnimationFrame(animate);\n    } else {\n      // При паузе рисуем текущее состояние\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      stallsRef.current.forEach(p => p.draw(ctx));\n      stallsRef.current.forEach(p => p.products.forEach(pr => pr.draw(ctx)));\n      customersRef.current.forEach(c => c.draw(ctx));\n    }\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [params.isRunning, params.stallsHeight, params.stallsWidth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0442\\u0434\\u0435\\u043B\\u043E\\u0432 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"stallsCount\",\n            min: \"1\",\n            max: \"10\",\n            value: params.stallsCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), params.stallsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043A\\u0443\\u043F\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"customersCount\",\n            min: \"1\",\n            max: \"30\",\n            value: params.customersCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), params.customersCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"speed\",\n            min: \"0.5\",\n            max: \"5\",\n            step: \"0.1\",\n            value: params.speed,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), params.speed.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initSimulation,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSimulation,\n          children: params.isRunning ? 'Пауза' : 'Старт'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\"\\u0422\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432: \", visibleCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-area\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: params.width,\n        height: params.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n};\n_s(Simulation, \"NZDyDAia3TOrGkTztXJlwZPbNKI=\");\n_c = Simulation;\nexport default Simulation;\nvar _c;\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Product","constructor","x","y","cost","ID","stall","attractive","size","color","draw","ctx","fillStyle","beginPath","arc","Math","PI","fill","checkNearby","productsNearby","productIndex","products","indexOf","push","length","Stall","width","height","fillRect","calculateDistanceToStall","min","calculateDistance","Human","speed","targetX","targetY","direction","stop","move","stalls","stallsWidth","stallsHeight","humans","dx","dy","distance","sqrt","atan2","avoidanceForce","avoidObstacles","combinedAngle","cos","sin","stopMove","avoidanceForceX","avoidanceForceY","otherHuman","distToHuman","forceMagnitude","nearestStall","findNearestStall","distToStall","Infinity","distX","distY","shortestDistance","Customer","productsAmountToBuy","productsCount","money","uselessProductsCount","productsToBuy","productsTaken","checkedStallsIDs","checking","i","floor","random","findNearestStallToCheck","includes","abs","newStalls","slice","splice","checkStalls","distBetweenStalls","productOrder","checkForProducts","product","takeProduct","productNearby","productsOrder","sort","a","b","x1","y1","x2","y2","pow","Simulation","_s","canvasRef","stallsRef","customersRef","params","setParams","stallsCount","isRunning","customersCount","visibleCount","setVisibleCount","initSimulation","newProducts","newCustomers","newStall","j","newProduct","current","handleParamChange","e","name","value","target","prev","parseFloat","toggleSimulation","canvas","getContext","animationFrameId","animate","clearRect","forEach","c","p","pr","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","max","onChange","step","toFixed","onClick","ref","_c","$RefreshReg$"],"sources":["A:/Проекты/ReactJS/Практика 2/hunter-prey-simulation/src/components/Simulation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Simulation.css';\r\n\r\nclass Product {\r\nconstructor(x, y, cost, ID, stall, attractive) {\r\n  this.x = x;\r\n  this.y = y;\r\n  this.cost = cost;               // цена товара\r\n  this.ID = ID;\r\n  this.stall = stall;\r\n  this.size = 6;\r\n  this.attractive = attractive;\r\n  if (attractive > 0)\r\n    this.color = '#30b705';\r\n  else this.color = '#7FFFD4';  \r\n  }\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n  checkNearby() {\r\n    const productsNearby = [];\r\n    const productIndex = this.stall.products.indexOf(this);\r\n    if (productIndex > 0) productsNearby.push(this.stall.products[productIndex - 1])\r\n    if (productIndex < this.stall.products.length - 1) productsNearby.push(this.stall.products[productIndex + 1])\r\n    return productsNearby;\r\n  }\r\n\r\n}\r\n\r\nclass Stall {\r\n  constructor(x, y, width, height, ID) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.ID = ID;\r\n    this.color = '#1E90FF';\r\n    this.products = [];\r\n  }\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    ctx.fill();\r\n  }\r\n  calculateDistanceToStall(x, y) {\r\n  return Math.min(calculateDistance(x, y, this.x, this.y), \r\n      calculateDistance(x, y, this.x, this.y + this.height),\r\n      calculateDistance(x, y, this.x + this.width, this.y),\r\n      calculateDistance(x, y, this.x + this.width, this.y + this.height)\r\n    );\r\n  }\r\n}\r\n\r\nclass Human {\r\n  constructor(x, y, speed) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n    this.targetX = 0;\r\n    this.targetY = 0;\r\n    this.size = 6;\r\n    this.direction = Math.PI / 2;\r\n    this.stop = false;\r\n  }\r\n\r\n  move(width, height, stalls, stallsWidth, stallsHeight, humans) {\r\n    const dx = this.targetX - this.x;\r\n    const dy = this.targetY - this.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (distance > 0 && !this.stop) {  // Avoid division by zero if already at target\r\n      this.direction = Math.atan2(dy, dx); // Calculate the angle to the target\r\n      \r\n      const avoidanceForce = this.avoidObstacles(stalls, stallsWidth, stallsHeight, humans);\r\n      const combinedAngle = Math.atan2(dy + avoidanceForce[1], dx + avoidanceForce[0])\r\n      this.direction = combinedAngle;\r\n      this.x += this.speed * Math.cos(this.direction);\r\n      this.y += this.speed * Math.sin(this.direction);\r\n\r\n      // Keep within bounds (optional but good practice)\r\n      if (this.x < 0) this.x = 0;\r\n      if (this.x > width) this.x = width;\r\n      if (this.y < 0) this.y = 0;\r\n      if (this.y > height) this.y = height;\r\n    } else {\r\n        // Already at the target, stop moving or do something else\r\n        return; // Or set some flag to indicate arrival\r\n    }\r\n  }\r\n\r\n  stopMove() {\r\n    this.targetX = this.x;\r\n    this.targetY = this.y;\r\n    this.stop = true;\r\n  }\r\n\r\n  avoidObstacles(stalls, stallsWidth, stallsHeight, humans) {\r\n    let avoidanceForceX = 0;\r\n    let avoidanceForceY = 0;\r\n    for (const otherHuman of humans) {\r\n      if (otherHuman !== this && otherHuman !== null) { \r\n        const distToHuman = calculateDistance(this.x, this.y, otherHuman.x, otherHuman.y);\r\n        if (distToHuman < this.size * 2) {\r\n          const forceMagnitude = (this.size * 2 - distToHuman) * 1;\r\n          avoidanceForceX += forceMagnitude * (this.x - otherHuman.x) / distToHuman;\r\n          avoidanceForceY += forceMagnitude * (this.y - otherHuman.y) / distToHuman;\r\n        }\r\n      }\r\n    }\r\n    const nearestStall = this.findNearestStall(stalls);\r\n    if (nearestStall == null) return;\r\n    let distToStall = Infinity;\r\n    if (this.y > nearestStall.y && this.y < nearestStall.y + stallsHeight) {\r\n      distToStall = this.x > nearestStall.x  ? this.x - nearestStall.x - stallsWidth : nearestStall.x - this.x;\r\n      if (distToStall < this.size * 2) {\r\n        const forceMagnitude = (this.size * 2 - distToStall) * 1;\r\n        avoidanceForceX += forceMagnitude * (this.x - nearestStall.x) / distToStall;\r\n      }  \r\n    }\r\n    else {\r\n      distToStall = nearestStall.calculateDistanceToStall(this.x, this.y);\r\n      if (distToStall < this.size * 2) {\r\n        const forceMagnitude = (this.size * 2 - distToStall) * 1;\r\n        const distX = this.x > nearestStall.x ? this.x - nearestStall.x - stallsWidth : this.x - nearestStall.x;\r\n        const distY = this.y > nearestStall.y ? this.y - nearestStall.y - stallsHeight : this.y - nearestStall.y;\r\n        avoidanceForceX += forceMagnitude * distX / distToStall;\r\n        avoidanceForceY += forceMagnitude * distY / distToStall;\r\n      }\r\n    }\r\n\r\n    return [avoidanceForceX, avoidanceForceY];\r\n  }\r\n\r\n  findNearestStall(stalls) {\r\n    if (!stalls || stalls.length === 0)\r\n      return null\r\n    let nearestStall = null;\r\n    let shortestDistance = Infinity;\r\n\r\n    for (const stall of stalls) {\r\n      const distance = stall.calculateDistanceToStall(this.x, this.y);\r\n\r\n      if (distance < shortestDistance) {\r\n        shortestDistance = distance;\r\n        nearestStall = stall;\r\n      }\r\n    }\r\n    \r\n    return nearestStall;\r\n  }\r\n\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Customer extends Human {\r\n  constructor(x, y, speed, productsAmountToBuy, productsCount, money) {\r\n    super(x, y, speed);\r\n    this.money = money;\r\n    this.direction = Math.PI / 2;\r\n    this.size = 6;\r\n    this.color = '#FF8C00';\r\n    this.uselessProductsCount = 0;\r\n    this.productsToBuy = []\r\n    this.productsTaken = [];\r\n    this.checkedStallsIDs = [];\r\n    this.checking = false;\r\n    for (let i = 0; i < productsAmountToBuy; i++) {\r\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\r\n    }\r\n  }\r\n\r\n  findNearestStallToCheck(stalls, stallsHeight, stallsWidth) {\r\n    const nearestStall = super.findNearestStall(stalls);\r\n    if (nearestStall != null && !this.checkedStallsIDs.includes(nearestStall.ID) && !this.checking){\r\n\r\n    if (Math.abs(this.x - nearestStall.x) < Math.abs(this.x - nearestStall.x - stallsWidth))\r\n    this.targetX = nearestStall.x - this.size;\r\n    else this.targetX = nearestStall.x + stallsWidth + this.size;\r\n    this.targetY = nearestStall.y + Math.random() * stallsHeight;\r\n    return nearestStall;\r\n    }\r\n    else if (stalls.length > 1 && nearestStall != null) {\r\n      let newStalls = stalls.slice();\r\n      for (let i = 0; i < stalls.length; i++) {\r\n        if (nearestStall.ID === stalls[i].ID)\r\n          newStalls = newStalls.splice(i, 1);\r\n      }\r\n      return this.findNearestStall(newStalls, stallsHeight, stallsWidth);\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  checkStalls(stalls, stallsHeight, stallsWidth, distBetweenStalls) {\r\n    const nearestStall = this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\r\n    if (nearestStall === null) return;\r\n    if (this.y > nearestStall.y && this.y < nearestStall.y + stallsHeight) {\r\n      if (this.targetX < this.x - distBetweenStalls - this.size * 2 || this.targetX > this.x + distBetweenStalls + this.size * 2) {\r\n        this.targetX = this.x; \r\n        this.targetY = Math.abs(this.y - nearestStall.y) < Math.abs(this.y - nearestStall.y - stallsHeight)? nearestStall.y - this.size * 2: nearestStall.y + stallsHeight + this.size * 2; \r\n        return;\r\n      }\r\n    }\r\n    const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\r\n    if (distance < this.size * 2 || this.checking) {\r\n      const productOrder = this.checkForProducts(nearestStall);\r\n      this.checking = true;\r\n      while (productOrder.length > 0 && productOrder[0] !== null) {\r\n        const product = productOrder[0];\r\n        this.targetX = product.x;\r\n        this.targetY = product.y;\r\n        if (calculateDistance(this.x, this.y, product.x, product.y) < this.size * 2) {\r\n          this.takeProduct(productOrder[0]);\r\n          productOrder.splice(0);\r\n        }\r\n        else break;\r\n      }\r\n      if (productOrder.length === 0) {\r\n        this.checkedStallsIDs.push(nearestStall.ID);\r\n        this.checking = false;\r\n      }\r\n    }\r\n    else return;\r\n  }\r\n\r\n  takeProduct(product) {\r\n    this.productsTaken.push(product);\r\n    for (const productNearby of product.checkNearby()) {\r\n      if (Math.random() * 100 < productNearby.attractive) {\r\n        this.uselessProductsCount++;\r\n        this.productsTaken.push(productNearby);\r\n        productNearby.stall.products.splice(productNearby.stall.products.indexOf(productNearby));\r\n      }\r\n    }\r\n    product.stall.products.splice(product.stall.products.indexOf(product));\r\n  }\r\n\r\n  checkForProducts(stall) {\r\n    const productsOrder = []\r\n    for (const product of stall.products) {\r\n      if (this.productsToBuy.includes(product.ID)) {\r\n        productsOrder.push(product);\r\n      }\r\n    }\r\n    productsOrder.sort((a, b) => calculateDistance(this.x, this.y, a.x, a.y) - calculateDistance(this.x, this.y, b.x, b.y));\r\n    return productsOrder;\r\n  }\r\n}\r\n\r\nfunction calculateDistance(x1, y1, x2, y2) {\r\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n}\r\n\r\nconst Simulation = () => {\r\n  const canvasRef = useRef(null);\r\n  const stallsRef = useRef([]);\r\n  const customersRef = useRef([]);\r\n  const [params, setParams] = useState({\r\n    stallsCount: 5,\r\n    width: 1200,\r\n    height: 675,\r\n    stallsWidth: 20,\r\n    stallsHeight: 675 - 250,\r\n    isRunning: true,\r\n    customersCount: 5,\r\n    speed: 1\r\n  });\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n\r\n  // Инициализация\r\n  const initSimulation = () => {\r\n    const newStalls = [];\r\n    const newProducts = [];\r\n    const newCustomers = [];\r\n    const distBetweenStalls = (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1);\r\n    for (let i = 0; i < params.stallsCount; i++) {\r\n      const newStall = new Stall(\r\n        i * params.stallsWidth + i * distBetweenStalls,\r\n        50,\r\n        params.stallsWidth,\r\n        params.stallsHeight,\r\n        i + 1);\r\n      newStalls.push(newStall);\r\n      for (let j = 0; j < params.stallsHeight / 12; j++) {\r\n        const newProduct = new Product(\r\n          i * params.stallsWidth + i * distBetweenStalls + params.stallsWidth / 2,\r\n          50 + j * 12 + 3,\r\n          Math.random() * 1000 + 10,\r\n          (j + 1) + i * (Math.floor(params.stallsHeight / 12) + 1),\r\n          newStall,\r\n          Math.random() <= 0.5? 0 : Math.random() * 90);\r\n        newStall.products.push(newProduct);\r\n        newProducts.push(newProduct);\r\n      }\r\n    }\r\n    for (let i = 0; i < params.customersCount; i++) {\r\n      newCustomers.push(new Customer(Math.random() * params.width, \r\n      params.height - 6, \r\n      params.speed, \r\n      Math.random() * 9 + 1,\r\n      newProducts.length,\r\n      Math.random()))\r\n    }\r\n    customersRef.current = newCustomers;\r\n    stallsRef.current = newStalls;\r\n    setVisibleCount(stallsRef.current[0].products.length * params.stallsCount);\r\n  };\r\n\r\n  const handleParamChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParams(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value)\r\n    }));\r\n  };\r\n\r\n  const toggleSimulation = () => {\r\n    setParams(prev => ({\r\n      ...prev,\r\n      isRunning: !prev.isRunning\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initSimulation();\r\n  }, [params.stallsCount]);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      customersRef.current.forEach(c => {\r\n        c.checkStalls(stallsRef.current, params.stallsHeight, params.stallsWidth, (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1));\r\n        c.move(canvas.width, canvas.height, stallsRef.current, params.stallsWidth, params.stallsHeight, customersRef.current);\r\n        c.draw(ctx);\r\n      });\r\n      \r\n\r\n      stallsRef.current.forEach(p => {\r\n        p.draw(ctx);\r\n        p.products.forEach(pr => pr.draw(ctx));\r\n      });\r\n\r\n      // herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\r\n      // setVisibleCount(herbivoresRef.current.length);\r\n      \r\n      if (params.isRunning) {\r\n        animationFrameId = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    \r\n    if (params.isRunning) {\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    } else {\r\n      // При паузе рисуем текущее состояние\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stallsRef.current.forEach(p => p.draw(ctx));\r\n      stallsRef.current.forEach(p => p.products.forEach(pr => pr.draw(ctx)));\r\n      customersRef.current.forEach(c => c.draw(ctx));\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [params.isRunning, params.stallsHeight, params.stallsWidth]);\r\n\r\n  return (\r\n    <div className=\"simulation-container\">\r\n      <div className=\"controls\">\r\n        <h2>Управление симуляцией</h2>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество отделов товаров:\r\n            <input\r\n              type=\"range\"\r\n              name=\"stallsCount\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={params.stallsCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.stallsCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество покупателей:\r\n            <input\r\n              type=\"range\"\r\n              name=\"customersCount\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n              value={params.customersCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.customersCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Скорость:\r\n            <input\r\n              type=\"range\"\r\n              name=\"speed\"\r\n              min=\"0.5\"\r\n              max=\"5\"\r\n              step=\"0.1\"\r\n              value={params.speed}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.speed.toFixed(1)} \r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"buttons\">\r\n          <button onClick={initSimulation}>Сбросить</button>\r\n          <button onClick={toggleSimulation}>\r\n            {params.isRunning ? 'Пауза' : 'Старт'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"info\">\r\n          Товаров: {visibleCount}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"simulation-area\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={params.width}\r\n          height={params.height}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Simulation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}