{"ast":null,"code":"var _jsxFileName = \"A:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\ReactJS\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 2\\\\hunter-prey-simulation\\\\src\\\\components\\\\Simulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Simulation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Herbivore {\n  constructor(x, y, speed) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.direction = Math.random() * Math.PI * 2;\n    this.energy = Math.random() * 50 + 50;\n    this.size = 6;\n    this.color = '#3498db';\n  }\n  move(width, height) {\n    if (Math.random() < 0.1) {\n      this.direction += (Math.random() - 0.5) * Math.PI / 4;\n    }\n    this.x += Math.cos(this.direction) * this.speed;\n    this.y += Math.sin(this.direction) * this.speed;\n\n    // Обработка границ\n    if (this.x < this.size) {\n      this.x = this.size;\n      this.direction = Math.PI - this.direction;\n    }\n    if (this.x > width - this.size) {\n      this.x = width - this.size;\n      this.direction = Math.PI - this.direction;\n    }\n    if (this.y < this.size) {\n      this.y = this.size;\n      this.direction = -this.direction;\n    }\n    if (this.y > height - this.size) {\n      this.y = height - this.size;\n      this.direction = -this.direction;\n    }\n    this.energy -= 0.05;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Глаз для направления\n    ctx.fillStyle = 'white';\n    ctx.beginPath();\n    ctx.arc(this.x + Math.cos(this.direction) * this.size / 2, this.y + Math.sin(this.direction) * this.size / 2, this.size / 3, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nconst Simulation = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const herbivoresRef = useRef([]);\n  const [params, setParams] = useState({\n    herbivoreCount: 15,\n    herbivoreSpeed: 2,\n    width: 800,\n    height: 500,\n    isRunning: true\n  });\n  const [visibleCount, setVisibleCount] = useState(0);\n\n  // Инициализация травоядных\n  const initSimulation = () => {\n    const newHerbivores = [];\n    for (let i = 0; i < params.herbivoreCount; i++) {\n      newHerbivores.push(new Herbivore(Math.random() * (params.width - 20) + 10, Math.random() * (params.height - 20) + 10, params.herbivoreSpeed));\n    }\n    herbivoresRef.current = newHerbivores;\n    setVisibleCount(newHerbivores.length);\n  };\n  const handleParamChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParams(prev => ({\n      ...prev,\n      [name]: parseFloat(value)\n    }));\n  };\n  const toggleSimulation = () => {\n    setParams(prev => ({\n      ...prev,\n      isRunning: !prev.isRunning\n    }));\n  };\n  useEffect(() => {\n    initSimulation();\n  }, [params.herbivoreCount]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Обновляем позиции\n      herbivoresRef.current.forEach(h => {\n        h.move(canvas.width, canvas.height);\n      });\n\n      // Отрисовываем всех травоядных\n      herbivoresRef.current.forEach(h => {\n        h.draw(ctx);\n      });\n\n      // Фильтруем умерших\n      herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\n      setVisibleCount(herbivoresRef.current.length);\n      if (params.isRunning) {\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n    if (params.isRunning) {\n      animationFrameId = requestAnimationFrame(animate);\n    } else {\n      // При паузе рисуем текущее состояние\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      herbivoresRef.current.forEach(h => h.draw(ctx));\n    }\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [params.isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0442\\u0440\\u0430\\u0432\\u043E\\u044F\\u0434\\u043D\\u044B\\u0445:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"herbivoreCount\",\n            min: \"1\",\n            max: \"30\",\n            value: params.herbivoreCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), params.herbivoreCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"herbivoreSpeed\",\n            min: \"0.5\",\n            max: \"5\",\n            step: \"0.1\",\n            value: params.herbivoreSpeed,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), params.herbivoreSpeed.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initSimulation,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSimulation,\n          children: params.isRunning ? 'Пауза' : 'Старт'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\"\\u0422\\u0440\\u0430\\u0432\\u043E\\u044F\\u0434\\u043D\\u044B\\u0445: \", visibleCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-area\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: params.width,\n        height: params.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Simulation, \"N46NlPhe+wtUxDdaCGQ/xQU4U7k=\");\n_c = Simulation;\nexport default Simulation;\nvar _c;\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Herbivore","constructor","x","y","speed","direction","Math","random","PI","energy","size","color","move","width","height","cos","sin","draw","ctx","fillStyle","beginPath","arc","fill","Simulation","_s","canvasRef","herbivoresRef","params","setParams","herbivoreCount","herbivoreSpeed","isRunning","visibleCount","setVisibleCount","initSimulation","newHerbivores","i","push","current","length","handleParamChange","e","name","value","target","prev","parseFloat","toggleSimulation","canvas","getContext","animationFrameId","animate","clearRect","forEach","h","filter","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","step","toFixed","onClick","ref","_c","$RefreshReg$"],"sources":["A:/Проекты/ReactJS/Практика 2/hunter-prey-simulation/src/components/Simulation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Simulation.css';\r\n\r\nclass Herbivore {\r\n  constructor(x, y, speed) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n    this.direction = Math.random() * Math.PI * 2;\r\n    this.energy = Math.random() * 50 + 50;\r\n    this.size = 6;\r\n    this.color = '#3498db';\r\n  }\r\n\r\n  move(width, height) {\r\n    if (Math.random() < 0.1) {\r\n      this.direction += (Math.random() - 0.5) * Math.PI / 4;\r\n    }\r\n\r\n    this.x += Math.cos(this.direction) * this.speed;\r\n    this.y += Math.sin(this.direction) * this.speed;\r\n\r\n    // Обработка границ\r\n    if (this.x < this.size) {\r\n      this.x = this.size;\r\n      this.direction = Math.PI - this.direction;\r\n    }\r\n    if (this.x > width - this.size) {\r\n      this.x = width - this.size;\r\n      this.direction = Math.PI - this.direction;\r\n    }\r\n    if (this.y < this.size) {\r\n      this.y = this.size;\r\n      this.direction = -this.direction;\r\n    }\r\n    if (this.y > height - this.size) {\r\n      this.y = height - this.size;\r\n      this.direction = -this.direction;\r\n    }\r\n\r\n    this.energy -= 0.05;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    \r\n    // Глаз для направления\r\n    ctx.fillStyle = 'white';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.x + Math.cos(this.direction) * this.size/2,\r\n      this.y + Math.sin(this.direction) * this.size/2,\r\n      this.size/3, \r\n      0, \r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nconst Simulation = () => {\r\n  const canvasRef = useRef(null);\r\n  const herbivoresRef = useRef([]);\r\n  const [params, setParams] = useState({\r\n    herbivoreCount: 15,\r\n    herbivoreSpeed: 2,\r\n    width: 800,\r\n    height: 500,\r\n    isRunning: true\r\n  });\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n\r\n  // Инициализация травоядных\r\n  const initSimulation = () => {\r\n    const newHerbivores = [];\r\n    for (let i = 0; i < params.herbivoreCount; i++) {\r\n      newHerbivores.push(new Herbivore(\r\n        Math.random() * (params.width - 20) + 10,\r\n        Math.random() * (params.height - 20) + 10,\r\n        params.herbivoreSpeed\r\n      ));\r\n    }\r\n    herbivoresRef.current = newHerbivores;\r\n    setVisibleCount(newHerbivores.length);\r\n  };\r\n\r\n  const handleParamChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParams(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value)\r\n    }));\r\n  };\r\n\r\n  const toggleSimulation = () => {\r\n    setParams(prev => ({\r\n      ...prev,\r\n      isRunning: !prev.isRunning\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initSimulation();\r\n  }, [params.herbivoreCount]);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Обновляем позиции\r\n      herbivoresRef.current.forEach(h => {\r\n        h.move(canvas.width, canvas.height);\r\n      });\r\n      \r\n      // Отрисовываем всех травоядных\r\n      herbivoresRef.current.forEach(h => {\r\n        h.draw(ctx);\r\n      });\r\n      \r\n      // Фильтруем умерших\r\n      herbivoresRef.current = herbivoresRef.current.filter(h => h.energy > 0);\r\n      setVisibleCount(herbivoresRef.current.length);\r\n      \r\n      if (params.isRunning) {\r\n        animationFrameId = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    \r\n    if (params.isRunning) {\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    } else {\r\n      // При паузе рисуем текущее состояние\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      herbivoresRef.current.forEach(h => h.draw(ctx));\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [params.isRunning]);\r\n\r\n  return (\r\n    <div className=\"simulation-container\">\r\n      <div className=\"controls\">\r\n        <h2>Управление симуляцией</h2>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество травоядных:\r\n            <input\r\n              type=\"range\"\r\n              name=\"herbivoreCount\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n              value={params.herbivoreCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.herbivoreCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Скорость:\r\n            <input\r\n              type=\"range\"\r\n              name=\"herbivoreSpeed\"\r\n              min=\"0.5\"\r\n              max=\"5\"\r\n              step=\"0.1\"\r\n              value={params.herbivoreSpeed}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.herbivoreSpeed.toFixed(1)}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"buttons\">\r\n          <button onClick={initSimulation}>Сбросить</button>\r\n          <button onClick={toggleSimulation}>\r\n            {params.isRunning ? 'Пауза' : 'Старт'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"info\">\r\n          Травоядных: {visibleCount}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"simulation-area\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={params.width}\r\n          height={params.height}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Simulation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}