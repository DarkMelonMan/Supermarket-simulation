{"ast":null,"code":"var _jsxFileName = \"A:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\ReactJS\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 2\\\\hunter-prey-simulation\\\\src\\\\components\\\\Simulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Simulation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Product {\n  constructor(x, y, cost, ID, stall, attractive) {\n    this.x = x;\n    this.y = y;\n    this.cost = cost;\n    this.ID = ID;\n    this.stall = stall;\n    this.size = 6;\n    this.attractive = attractive;\n    if (attractive > 0) this.color = '#30b705';else this.color = '#7FFFD4';\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n  checkNearby() {\n    const productsNearby = [];\n    const productIndex = this.stall.products.indexOf(this);\n    if (productIndex > 0) productsNearby.push(this.stall.products[productIndex - 1]);\n    if (productIndex < this.stall.products.length - 1) productsNearby.push(this.stall.products[productIndex + 1]);\n    return productsNearby;\n  }\n}\nclass Stall {\n  constructor(x, y, width, height, ID) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.ID = ID;\n    this.color = '#1E90FF';\n    this.products = [];\n    this.productsToRestock = [];\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.fill();\n  }\n  calculateDistanceToStall(x, y) {\n    return Math.min(calculateDistance(x, y, this.x, this.y), calculateDistance(x, y, this.x, this.y + this.height), calculateDistance(x, y, this.x + this.width, this.y), calculateDistance(x, y, this.x + this.width, this.y + this.height));\n  }\n}\nclass Cashier {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.color = '#FF6347';\n    this.queue = [];\n    this.processingTime = 0;\n    this.totalRevenue = 0;\n    this.customersProcessed = 0;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.fill();\n\n    // Draw queue\n    ctx.fillStyle = 'rgba(255, 99, 71, 0.5)';\n    for (let i = 0; i < this.queue.length; i++) {\n      ctx.beginPath();\n      ctx.arc(this.x - 20 - i * 20, this.y + this.height / 2, 6, 0, Math.PI * 2);\n      ctx.fill();\n    }\n  }\n  processCustomer() {\n    if (this.queue.length > 0) {\n      this.processingTime++;\n      if (this.processingTime > 120) {\n        const customer = this.queue.shift();\n        let total = 0;\n        customer.productsTaken.forEach(product => {\n          total += product.cost;\n        });\n        this.totalRevenue += total;\n        this.customersProcessed++;\n        this.processingTime = 0;\n        return customer;\n      }\n    }\n    return null;\n  }\n}\nclass Human {\n  constructor(x, y, speed) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.targetX = x;\n    this.targetY = y;\n    this.size = 6;\n    this.direction = Math.PI / 2;\n    this.bypassingXRect = null;\n    this.bypassingYRect = null;\n    this.color = '#FF8C00';\n    this.left = false;\n  }\n  move(width, height, stalls, humans, cashiers) {\n    const dx = this.bypassingYRect || this.bypassingXRect ? 0 : this.targetX - this.x;\n    const dy = this.bypassingYRect || this.bypassingXRect ? 0 : this.targetY - this.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance > 0 || this.bypassingYRect || this.bypassingXRect) {\n      // Получаем силу избегания\n      const avoidanceForce = this.avoidObstacles(stalls, humans, cashiers);\n\n      // Комбинируем основное направление и силу избегания\n      const combinedDx = dx + avoidanceForce[0] * 1.5;\n      const combinedDy = dy + avoidanceForce[1] * 1.5;\n      const combinedDistance = Math.sqrt(combinedDx * combinedDx + combinedDy * combinedDy);\n      if (combinedDistance > 0) {\n        this.direction = Math.atan2(combinedDy, combinedDx);\n        this.x += this.speed * Math.cos(this.direction);\n        this.y += this.speed * Math.sin(this.direction);\n      }\n\n      // Границы области\n      this.x = Math.max(this.size, Math.min(width - this.size, this.x));\n      this.y = Math.max(this.size, Math.min(height - this.size, this.y));\n    }\n  }\n  avoidObstacles(stalls, humans, cashiers) {\n    let avoidanceForceX = 0;\n    let avoidanceForceY = 0;\n    const personalSpace = this.size * 2;\n\n    // Избегание других покупателей\n    for (const otherHuman of humans) {\n      if (otherHuman !== this && otherHuman !== null) {\n        const distToHuman = calculateDistance(this.x, this.y, otherHuman.x, otherHuman.y);\n        if (distToHuman < personalSpace) {\n          const forceMagnitude = (personalSpace - distToHuman) * 0.5;\n          avoidanceForceX += forceMagnitude * (this.x - otherHuman.x) / distToHuman;\n          avoidanceForceY += forceMagnitude * (this.y - otherHuman.y) / distToHuman;\n        }\n      }\n    }\n    if (this.bypassingYRect) {\n      const distToTop = Math.abs(this.y - (this.bypassingYRect.y - personalSpace * 2));\n      const distToBottom = Math.abs(this.y - (this.bypassingYRect.y + this.bypassingYRect.height + personalSpace * 2));\n      avoidanceForceY += distToTop < distToBottom ? -this.speed : this.speed;\n      if (distToTop < this.size || distToBottom < this.size) {\n        avoidanceForceY = 0;\n        avoidanceForceX = this.x > this.targetX ? -this.speed : this.speed;\n      }\n      if (!this.isBehindRect(this.bypassingYRect)) {\n        this.bypassingYRect = null;\n      }\n    } else if (this.bypassingXRect) {\n      const distToLeft = Math.abs(this.x - (this.bypassingXRect.x - personalSpace * 2));\n      const distToRight = Math.abs(this.x - (this.bypassingXRect.x + this.bypassingXRect.width + personalSpace * 2));\n      avoidanceForceX += distToLeft < distToRight ? -this.speed : this.speed;\n      if (distToLeft < this.size * 2 || distToRight < this.size * 2) {\n        avoidanceForceX = 0;\n        avoidanceForceY = this.y > this.targetY ? -this.speed : this.speed;\n      }\n      if (!this.isAtSideRect(this.bypassingXRect)) {\n        this.bypassingXRect = null;\n      }\n    }\n    // Проверяем, находится ли цель за прилавком\n    else if (this.targetX && this.targetY) {\n      for (const stall of stalls) {\n        // Если цель находится за этим прилавком\n        if (this.isBehindRect(stall)) {\n          this.bypassingYRect = stall;\n          break;\n        }\n        if (this.isAtSideRect(stall)) {\n          this.bypassingXRect = stall;\n          break;\n        }\n      }\n      for (const cashier of cashiers) {\n        if (this.isBehindRect(cashier)) {\n          this.bypassingYRect = cashier;\n          break;\n        }\n        if (this.isAtSideRect(cashier)) {\n          this.bypassingXRect = cashier;\n          break;\n        }\n      }\n    }\n    return [avoidanceForceX, avoidanceForceY];\n  }\n\n  // Проверяет, находится ли цель за указанным прилавком\n  isBehindRect(rect) {\n    // Проверяем, находится ли цель за прилавком по оси X\n    const isBehindX = this.x - this.size * 2 < rect.x && this.targetX > rect.x + rect.width || this.x > rect.x + rect.width - this.size * 2 && this.targetX < rect.x;\n    // Проверяем, находимся ли мы перед прилавком\n    const isInFrontOfRect = this.y >= rect.y - this.size * 4 && this.y <= rect.y + rect.height + this.size * 4;\n    return isBehindX && isInFrontOfRect;\n  }\n  isAtSideRect(rect) {\n    const isAtSideY = this.y - this.size * 2 < rect.y && this.targetY > rect.y + rect.height || this.y > rect.y + rect.height - this.size * 2 && this.targetY < rect.y;\n    // Проверяем, находимся ли мы перед прилавком\n    const isAtSideX = this.x >= rect.x - this.size * 4 && this.x <= rect.x + rect.width + this.size * 4;\n    return isAtSideX && isAtSideY;\n  }\n  findNearestStall(stalls) {\n    if (!stalls || stalls.length === 0) return null;\n    let nearestStall = null;\n    let shortestDistance = Infinity;\n    for (const stall of stalls) {\n      const distance = stall.calculateDistanceToStall(this.x, this.y);\n      if (distance < shortestDistance) {\n        shortestDistance = distance;\n        nearestStall = stall;\n      }\n    }\n    return nearestStall;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nclass Customer extends Human {\n  constructor(x, y, speed, productsAmountToBuy, productsCount) {\n    super(x, y, speed);\n    this.color = '#FF8C00';\n    this.uselessProductsCount = 0;\n    this.productsToBuy = [];\n    this.productsTaken = [];\n    this.checkedStallsIDs = [];\n    this.checking = false;\n    this.state = 'shopping'; // 'shopping', 'avoiding', 'goingToCashier', 'leaving'\n    this.timeSpent = 0;\n    this.totalSpent = 0;\n    this.currentProductTarget = null;\n    this.nearestStallData = [];\n    this.bestCashier = null;\n    for (let i = 0; i < productsAmountToBuy; i++) {\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\n    }\n  }\n  findNearestStallToCheck(stalls, stallsHeight, stallsWidth) {\n    const nearestStall = super.findNearestStall(stalls);\n    const nearestStallData = [nearestStall];\n    if (nearestStall != null && !this.checkedStallsIDs.includes(nearestStall.ID) && !this.checking) {\n      if (Math.abs(this.x - nearestStall.x) < Math.abs(this.x - nearestStall.x - stallsWidth)) nearestStallData.push(nearestStall.x - this.size * 2);else nearestStallData.push(nearestStall.x + stallsWidth + this.size * 2);\n      nearestStallData.push(nearestStall.y + Math.random() * stallsHeight);\n      return nearestStallData;\n    } else if (stalls.length >= 1 && nearestStall != null) {\n      let newStalls = stalls.filter(item => item.ID !== nearestStall.ID);\n      return this.findNearestStallToCheck(newStalls, stallsHeight, stallsWidth);\n    } else {\n      return null;\n    }\n  }\n  checkStalls(height, stalls, stallsHeight, stallsWidth, cashiers) {\n    if (this.state === 'leaving' && height - this.y < this.size * 2) {\n      this.left = true;\n    }\n    if (this.bypassingXRect || this.bypassingYRect || this.state === 'leaving') return;\n    if (this.state === 'shopping') {\n      // Если нет текущей цели, ищем новый прилавк\n      if (!this.currentProductTarget) {\n        if (this.nearestStallData.length === 0) this.nearestStallData = this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);else if (this.checkedStallsIDs.includes(this.nearestStallData[0].ID)) this.nearestStallData = this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\n        if (!this.nearestStallData) {\n          // Нет больше прилавков для проверки - идем на кассу\n          this.goToCashier(cashiers);\n          return;\n        }\n        const [nearestStall, targetX, targetY] = this.nearestStallData;\n        this.targetX = targetX;\n        this.targetY = targetY;\n        this.currentStall = nearestStall;\n      }\n\n      // Проверяем расстояние до текущей цели\n      const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\n      if (distance < this.size * 4) {\n        // Достигли цели - либо прилавка, либо товара\n        if (this.currentProductTarget) {\n          // Берем товар\n          this.takeProduct(this.currentProductTarget);\n          this.currentProductTarget = null;\n\n          // Проверяем, есть ли еще товары в этом прилавке\n          const nextProduct = this.checkForProducts(this.currentStall)[0];\n          if (nextProduct) {\n            this.currentProductTarget = nextProduct;\n            this.targetX = nextProduct.x > this.x ? nextProduct.x - this.size * 2 : nextProduct.x + this.size * 2;\n            this.targetY = nextProduct.y;\n          } else {\n            // Товаров больше нет - отмечаем прилавк как проверенный\n            this.checkedStallsIDs.push(this.currentStall.ID);\n            this.currentStall = null;\n          }\n        } else {\n          // Достигли прилавка - ищем товары\n          const products = this.checkForProducts(this.currentStall);\n          if (products.length > 0) {\n            this.currentProductTarget = products[0];\n            this.targetX = this.x < this.currentStall.x ? products[0].x - this.size * 2 : products[0].x + this.size * 2;\n            this.targetY = products[0].y;\n          } else {\n            // Нет товаров - отмечаем прилавк как проверенный\n            this.checkedStallsIDs.push(this.currentStall.ID);\n            this.currentStall = null;\n          }\n        }\n      }\n    } else if (this.state === 'goingToCashier') {\n      this.goToCashier(cashiers);\n      const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\n      if (distance < this.size * 4) {\n        this.state = 'inQueue';\n        this.bestCashier.queue.push(this);\n      }\n    } else if (this.state === 'inQueue') this.timeSpent++;\n  }\n  goToCashier(cashiers) {\n    if (cashiers.length === 0) {\n      this.state = 'leaving';\n      this.targetX = this.x;\n      this.targetY = 700;\n      return;\n    }\n\n    // Find cashier with shortest queue\n    let bestCashier = cashiers[0];\n    if (this.bestCashier) bestCashier = this.bestCashier;\n    for (const cashier of cashiers) {\n      if (cashier.queue.length < bestCashier.queue.length) {\n        bestCashier = cashier;\n      }\n    }\n    this.targetX = bestCashier.x - this.size;\n    this.targetY = bestCashier.y + bestCashier.height / 2;\n    this.state = 'goingToCashier';\n    this.bestCashier = bestCashier;\n  }\n  takeProduct(product) {\n    if (this.money < product.cost) return false;\n    this.productsTaken.push(product);\n    this.money -= product.cost;\n    this.totalSpent += product.cost;\n\n    // Удаляем товар из прилавка\n    const productIndex = product.stall.products.indexOf(product);\n    if (productIndex !== -1) {\n      product.stall.productsToRestock.push(product);\n      product.stall.products.splice(productIndex, 1);\n    }\n\n    // Проверяем привлекательные соседние товары\n    const nearbyProducts = product.checkNearby();\n    for (const nearbyProduct of nearbyProducts) {\n      if (Math.random() * 100 < nearbyProduct.attractive && this.money >= nearbyProduct.cost && !this.productsTaken.includes(nearbyProduct)) {\n        this.uselessProductsCount++;\n        this.productsTaken.push(nearbyProduct);\n        this.money -= nearbyProduct.cost;\n        this.totalSpent += nearbyProduct.cost;\n\n        // Удаляем соседний товар\n        const nearbyIndex = nearbyProduct.stall.products.indexOf(nearbyProduct);\n        if (nearbyIndex !== -1) {\n          nearbyProduct.stall.products.splice(nearbyIndex, 1);\n        }\n      }\n    }\n    return true;\n  }\n  checkForProducts(stall) {\n    if (!stall) return [];\n    let availableProducts = stall.products.filter(product => this.productsToBuy.includes(product.ID) && !this.productsTaken.includes(product));\n\n    // Сортируем по расстоянию до покупателя\n    availableProducts = sortByDistance(this.x, this.y, availableProducts);\n    return availableProducts;\n  }\n  leaveStore(height) {\n    this.state = 'leaving';\n    this.targetX = this.x;\n    this.targetY = height;\n  }\n  draw(ctx) {\n    if (this.state !== 'inQueue') {\n      super.draw(ctx);\n\n      // Draw basket contents\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.beginPath();\n      ctx.arc(this.x, this.y - 10, this.productsTaken.length, 0, Math.PI * 2);\n      ctx.fill();\n    }\n  }\n}\nclass Manager extends Human {\n  constructor(x, y, speed) {\n    super(x, y, speed);\n    this.color = '#5c0bb2';\n    this.currentProductTarget = null;\n    this.state = 'restocking';\n  }\n  isAnotherManagerTarget(product, managers) {\n    for (const manager of managers) {\n      if (manager !== this && manager.currentProductTarget === product) return true;\n    }\n    return false;\n  }\n  restockProducts(nearestProduct) {\n    if (!nearestProduct && !this.currentProductTarget) return;\n    if (!this.currentProductTarget) this.currentProductTarget = nearestProduct;\n    const product = this.currentProductTarget;\n    const closestX = product.x > this.x ? product.x - this.size * 2 : product.x + this.size * 2;\n    this.targetX = closestX;\n    this.targetY = product.y;\n    const distance = calculateDistance(this.x, this.y, closestX, product.y);\n    if (distance < this.size * 2) {\n      let productIndex = product.ID - product.stall.products[0].ID;\n      product.stall.products.splice(productIndex, 0, product);\n      product.stall.productsToRestock = product.stall.productsToRestock.filter(p => p !== product);\n      this.currentProductTarget = null;\n    }\n  }\n  leaveStore() {\n    this.targetX = this.x;\n    this.targetY = 0;\n    if (calculateDistance(this.x, this.y, this.targetX, this.targetY) < this.size * 2) {\n      this.left = true;\n    }\n  }\n  searchForProductsToRestock(stalls, managers) {\n    if (this.state === 'restocking') {\n      if (this.currentProductTarget) {\n        this.restockProducts(null);\n        return;\n      }\n      let nearestProduct = null;\n      const nearestStall = super.findNearestStall(stalls);\n      if (nearestStall && nearestStall.productsToRestock.length > 0) {\n        const productsToRestock = sortByDistance(this.x, this.y, nearestStall.productsToRestock);\n        let i = 0;\n        while (!nearestProduct || this.isAnotherManagerTarget(nearestProduct, managers)) {\n          nearestProduct = productsToRestock[i];\n          i++;\n          if (i >= productsToRestock.length) break;\n        }\n        this.restockProducts(nearestProduct);\n      } else if (nearestStall) {\n        const newStalls = stalls.filter(s => s !== nearestStall);\n        this.searchForProductsToRestock(newStalls, managers);\n      } else this.state = 'leaving';\n    } else if (this.state === 'leaving') this.leaveStore();\n  }\n}\nfunction calculateDistance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\nfunction sortByDistance(x, y, list) {\n  list.sort((a, b) => calculateDistance(x, y, a.x, a.y) - calculateDistance(x, y, b.x, b.y));\n  return list;\n}\nconst Simulation = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const stallsRef = useRef([]);\n  const customersRef = useRef([]);\n  const cashiersRef = useRef([]);\n  const managersRef = useRef([]);\n  const [stats, setStats] = useState({\n    totalRevenue: 0,\n    customersServed: 0,\n    averageSpending: 0,\n    uselessProductsSold: 0,\n    activeCustomers: 0,\n    activeManagers: 0\n  });\n  const [params, setParams] = useState({\n    stallsCount: 5,\n    width: 1200,\n    height: 675,\n    stallsWidth: 20,\n    stallsHeight: 425,\n    isRunning: true,\n    customersCount: 5,\n    speed: 1,\n    cashiersCount: 2,\n    spawnRate: 100\n  });\n  const [visibleCount, setVisibleCount] = useState(0);\n  const spawnTimerRef = useRef(0);\n  const initSimulation = () => {\n    const newStalls = [];\n    const newProducts = [];\n    const newCustomers = [];\n    const newCashiers = [];\n    let distBetweenStalls = (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1);\n    for (let i = 0; i < params.stallsCount; i++) {\n      if (params.stallsCount === 1) distBetweenStalls = 0;\n      const newStall = new Stall(i * params.stallsWidth + i * distBetweenStalls, 50, params.stallsWidth, params.stallsHeight, i + 1);\n      newStalls.push(newStall);\n      for (let j = 0; j < params.stallsHeight / 12; j++) {\n        const newProduct = new Product(i * params.stallsWidth + i * distBetweenStalls + params.stallsWidth / 2, 50 + j * 12 + 3, Math.random() * 100 + 10, j + 1 + i * (Math.floor(params.stallsHeight / 12) + 1), newStall, Math.random() <= 0.5 ? 0 : Math.random() * 90);\n        newStall.products.push(newProduct);\n        newProducts.push(newProduct);\n      }\n    }\n    const cashierWidth = 30;\n    const cashierHeight = 50;\n    const cashierSpacing = 50;\n    const totalCashiersWidth = params.cashiersCount * cashierWidth + (params.cashiersCount - 1) * cashierSpacing;\n    const startX = (params.width - totalCashiersWidth) / 2;\n    for (let i = 0; i < params.cashiersCount; i++) {\n      const newCashier = new Cashier(startX + i * (cashierWidth + cashierSpacing), params.height - 100, cashierWidth, cashierHeight);\n      newCashiers.push(newCashier);\n    }\n    for (let i = 0; i < params.customersCount; i++) {\n      newCustomers.push(new Customer(Math.random() * params.width, params.height - 6, params.speed, Math.floor(Math.random() * 3) + 1, newProducts.length));\n    }\n    customersRef.current = newCustomers;\n    stallsRef.current = newStalls;\n    cashiersRef.current = newCashiers;\n    setVisibleCount(newProducts.length);\n    spawnTimerRef.current = 0;\n    managersRef.current = [];\n    setStats({\n      totalRevenue: 0,\n      customersServed: 0,\n      averageSpending: 0,\n      uselessProductsSold: 0,\n      activeCustomers: newCustomers.length,\n      activeManagers: 0\n    });\n  };\n  const handleParamChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParams(prev => ({\n      ...prev,\n      [name]: parseFloat(value)\n    }));\n  };\n  const toggleSimulation = () => {\n    setParams(prev => ({\n      ...prev,\n      isRunning: !prev.isRunning\n    }));\n  };\n  useEffect(() => {\n    initSimulation();\n  }, [params.stallsCount, params.cashiersCount]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Process cashiers\n      cashiersRef.current.forEach(cashier => {\n        const finishedCustomer = cashier.processCustomer();\n        if (finishedCustomer) {\n          finishedCustomer.leaveStore(params.height);\n          setStats(prev => ({\n            ...prev,\n            totalRevenue: prev.totalRevenue + finishedCustomer.totalSpent,\n            customersServed: prev.customersServed + 1,\n            uselessProductsSold: prev.uselessProductsSold + finishedCustomer.uselessProductsCount,\n            averageSpending: prev.customersServed > 0 ? (prev.averageSpending * prev.customersServed + finishedCustomer.totalSpent) / (prev.customersServed + 1) : finishedCustomer.totalSpent\n          }));\n        }\n      });\n\n      // Draw stalls and products\n      stallsRef.current.forEach(p => {\n        p.draw(ctx);\n        p.products.forEach(pr => pr.draw(ctx));\n      });\n\n      // Draw cashiers\n      cashiersRef.current.forEach(c => c.draw(ctx));\n\n      // Move and draw customers\n      const currentHumans = customersRef.current.concat(managersRef.current);\n      customersRef.current.forEach(c => {\n        c.checkStalls(params.height, stallsRef.current, params.stallsHeight, params.stallsWidth, cashiersRef.current);\n        c.move(canvas.width, canvas.height, stallsRef.current, currentHumans, cashiersRef.current);\n        c.draw(ctx);\n      });\n      managersRef.current.forEach(m => {\n        m.searchForProductsToRestock(stallsRef.current, managersRef.current);\n        m.move(canvas.width, canvas.height, stallsRef.current, currentHumans, cashiersRef.current);\n        m.draw(ctx);\n      });\n      customersRef.current = customersRef.current.filter(c => !c.left);\n      managersRef.current = managersRef.current.filter(m => !m.left);\n      let productCount = 0;\n      const maxProductCount = Math.ceil(params.stallsHeight / 12) * params.stallsCount;\n      stallsRef.current.forEach(stall => {\n        productCount += stall.products.length;\n      });\n      setVisibleCount(productCount);\n      if (productCount < maxProductCount) {\n        const productsPerStall = maxProductCount / params.stallsCount;\n        if (productCount < productsPerStall * (params.stallsCount - managersRef.current.length)) {\n          managersRef.current.push(new Manager(Math.random() * params.width, 0, params.speed * 1.5));\n        }\n      }\n      if (params.isRunning) {\n        spawnTimerRef.current++;\n        if (spawnTimerRef.current > params.spawnRate && customersRef.current.length < 50) {\n          const newCustomer = new Customer(Math.random() * params.width, params.height - 6, params.speed, Math.floor(Math.random() * 3) + 1, stallsRef.current.reduce((acc, stall) => acc + stall.products.length, 0), Math.random() * 2 + 1);\n          customersRef.current.push(newCustomer);\n          spawnTimerRef.current = 0;\n        }\n      }\n      setStats(prev => ({\n        ...prev,\n        activeCustomers: customersRef.current.length,\n        activeManagers: managersRef.current.length\n      }));\n      if (params.isRunning) {\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n    if (params.isRunning) {\n      animationFrameId = requestAnimationFrame(animate);\n    } else {\n      // Draw current state when paused\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      stallsRef.current.forEach(p => p.draw(ctx));\n      stallsRef.current.forEach(p => p.products.forEach(pr => pr.draw(ctx)));\n      cashiersRef.current.forEach(c => c.draw(ctx));\n      customersRef.current.forEach(c => c.draw(ctx));\n      managersRef.current.forEach(m => m.draw(ctx));\n    }\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [params.isRunning, params.stallsHeight, params.stallsWidth, params.spawnRate, params.height, params.width, params.speed, params.stallsCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0442\\u0434\\u0435\\u043B\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"stallsCount\",\n            min: \"1\",\n            max: \"10\",\n            value: params.stallsCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), params.stallsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043A\\u0430\\u0441\\u0441:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"cashiersCount\",\n            min: \"1\",\n            max: \"5\",\n            value: params.cashiersCount,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), params.cashiersCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u043F\\u043E\\u043A\\u0443\\u043F\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"speed\",\n            min: \"0.5\",\n            max: \"5\",\n            step: \"0.1\",\n            value: params.speed,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 13\n          }, this), params.speed.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0427\\u0430\\u0441\\u0442\\u043E\\u0442\\u0430 \\u043F\\u043E\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"spawnRate\",\n            min: \"10\",\n            max: \"300\",\n            value: params.spawnRate,\n            onChange: handleParamChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this), params.spawnRate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initSimulation,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSimulation,\n          children: params.isRunning ? 'Пауза' : 'Старт'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0412\\u044B\\u0440\\u0443\\u0447\\u043A\\u0430: $\", stats.totalRevenue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041E\\u0431\\u0441\\u043B\\u0443\\u0436\\u0435\\u043D\\u043E \\u043F\\u043E\\u043A\\u0443\\u043F\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439: \", stats.customersServed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0447\\u0435\\u043A: $\", stats.averageSpending.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041D\\u0435\\u043D\\u0443\\u0436\\u043D\\u044B\\u0445 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043F\\u0440\\u043E\\u0434\\u0430\\u043D\\u043E: \", stats.uselessProductsSold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041F\\u043E\\u043A\\u0443\\u043F\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0432 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0435: \", stats.activeCustomers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440\\u043E\\u0432 \\u0432 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0435: \", stats.activeManagers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0422\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u043A\\u0430\\u0445: \", visibleCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-area\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: params.width,\n        height: params.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 794,\n    columnNumber: 5\n  }, this);\n};\n_s(Simulation, \"5I7cbzSewx5bPe+y1/+lDQ8Vfrs=\");\n_c = Simulation;\nexport default Simulation;\nvar _c;\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Product","constructor","x","y","cost","ID","stall","attractive","size","color","draw","ctx","fillStyle","beginPath","arc","Math","PI","fill","checkNearby","productsNearby","productIndex","products","indexOf","push","length","Stall","width","height","productsToRestock","fillRect","calculateDistanceToStall","min","calculateDistance","Cashier","queue","processingTime","totalRevenue","customersProcessed","i","processCustomer","customer","shift","total","productsTaken","forEach","product","Human","speed","targetX","targetY","direction","bypassingXRect","bypassingYRect","left","move","stalls","humans","cashiers","dx","dy","distance","sqrt","avoidanceForce","avoidObstacles","combinedDx","combinedDy","combinedDistance","atan2","cos","sin","max","avoidanceForceX","avoidanceForceY","personalSpace","otherHuman","distToHuman","forceMagnitude","distToTop","abs","distToBottom","isBehindRect","distToLeft","distToRight","isAtSideRect","cashier","rect","isBehindX","isInFrontOfRect","isAtSideY","isAtSideX","findNearestStall","nearestStall","shortestDistance","Infinity","Customer","productsAmountToBuy","productsCount","uselessProductsCount","productsToBuy","checkedStallsIDs","checking","state","timeSpent","totalSpent","currentProductTarget","nearestStallData","bestCashier","floor","random","findNearestStallToCheck","stallsHeight","stallsWidth","includes","newStalls","filter","item","checkStalls","goToCashier","currentStall","takeProduct","nextProduct","checkForProducts","money","splice","nearbyProducts","nearbyProduct","nearbyIndex","availableProducts","sortByDistance","leaveStore","Manager","isAnotherManagerTarget","managers","manager","restockProducts","nearestProduct","closestX","p","searchForProductsToRestock","s","x1","y1","x2","y2","pow","list","sort","a","b","Simulation","_s","canvasRef","stallsRef","customersRef","cashiersRef","managersRef","stats","setStats","customersServed","averageSpending","uselessProductsSold","activeCustomers","activeManagers","params","setParams","stallsCount","isRunning","customersCount","cashiersCount","spawnRate","visibleCount","setVisibleCount","spawnTimerRef","initSimulation","newProducts","newCustomers","newCashiers","distBetweenStalls","newStall","j","newProduct","cashierWidth","cashierHeight","cashierSpacing","totalCashiersWidth","startX","newCashier","current","handleParamChange","e","name","value","target","prev","parseFloat","toggleSimulation","canvas","getContext","animationFrameId","animate","clearRect","finishedCustomer","pr","c","currentHumans","concat","m","productCount","maxProductCount","ceil","productsPerStall","newCustomer","reduce","acc","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","step","toFixed","onClick","ref","_c","$RefreshReg$"],"sources":["A:/Проекты/ReactJS/Практика 2/hunter-prey-simulation/src/components/Simulation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Simulation.css';\r\n\r\nclass Product {\r\n  constructor(x, y, cost, ID, stall, attractive) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.cost = cost;\r\n    this.ID = ID;\r\n    this.stall = stall;\r\n    this.size = 6;\r\n    this.attractive = attractive;\r\n    if (attractive > 0) this.color = '#30b705';\r\n    else this.color = '#7FFFD4';\r\n  }\r\n  \r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n  \r\n  checkNearby() {\r\n    const productsNearby = [];\r\n    const productIndex = this.stall.products.indexOf(this);\r\n    if (productIndex > 0) productsNearby.push(this.stall.products[productIndex - 1]);\r\n    if (productIndex < this.stall.products.length - 1) productsNearby.push(this.stall.products[productIndex + 1]);\r\n    return productsNearby;\r\n  }\r\n}\r\n\r\nclass Stall {\r\n  constructor(x, y, width, height, ID) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.ID = ID;\r\n    this.color = '#1E90FF';\r\n    this.products = [];\r\n    this.productsToRestock = [];\r\n  }\r\n  \r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    ctx.fill();\r\n  }\r\n  \r\n  calculateDistanceToStall(x, y) {\r\n    return Math.min(\r\n      calculateDistance(x, y, this.x, this.y),\r\n      calculateDistance(x, y, this.x, this.y + this.height),\r\n      calculateDistance(x, y, this.x + this.width, this.y),\r\n      calculateDistance(x, y, this.x + this.width, this.y + this.height)\r\n    );\r\n  }\r\n}\r\n\r\nclass Cashier {\r\n  constructor(x, y, width, height) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.color = '#FF6347';\r\n    this.queue = [];\r\n    this.processingTime = 0;\r\n    this.totalRevenue = 0;\r\n    this.customersProcessed = 0;\r\n  }\r\n  \r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    ctx.fill();\r\n    \r\n    // Draw queue\r\n    ctx.fillStyle = 'rgba(255, 99, 71, 0.5)';\r\n    for (let i = 0; i < this.queue.length; i++) {\r\n      ctx.beginPath();\r\n      ctx.arc(this.x - 20 - i * 20, this.y + this.height / 2, 6, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n  }\r\n  \r\n  processCustomer() {\r\n    if (this.queue.length > 0) {\r\n      this.processingTime++;\r\n      if (this.processingTime > 120) {\r\n        const customer = this.queue.shift();\r\n        let total = 0;\r\n        customer.productsTaken.forEach(product => {\r\n          total += product.cost;\r\n        });\r\n        this.totalRevenue += total;\r\n        this.customersProcessed++;\r\n        this.processingTime = 0;\r\n        return customer;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nclass Human {\r\n  constructor(x, y, speed) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n    this.targetX = x;\r\n    this.targetY = y;\r\n    this.size = 6;\r\n    this.direction = Math.PI / 2;\r\n    this.bypassingXRect = null;\r\n    this.bypassingYRect = null;\r\n    this.color = '#FF8C00';\r\n    this.left = false;\r\n  }\r\n  \r\n  move(width, height, stalls, humans, cashiers) {\r\n  const dx = this.bypassingYRect || this.bypassingXRect? 0 : this.targetX - this.x;\r\n  const dy = this.bypassingYRect || this.bypassingXRect? 0 : this.targetY - this.y;\r\n  const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n  if (distance > 0 || this.bypassingYRect || this.bypassingXRect) {\r\n    // Получаем силу избегания\r\n    const avoidanceForce = this.avoidObstacles(stalls, humans, cashiers);\r\n    \r\n    // Комбинируем основное направление и силу избегания\r\n    const combinedDx = dx + avoidanceForce[0] * 1.5;\r\n    const combinedDy = dy + avoidanceForce[1] * 1.5;\r\n    const combinedDistance = Math.sqrt(combinedDx * combinedDx + combinedDy * combinedDy);\r\n    \r\n    if (combinedDistance > 0) {\r\n      this.direction = Math.atan2(combinedDy, combinedDx);\r\n      this.x += this.speed * Math.cos(this.direction);\r\n      this.y += this.speed * Math.sin(this.direction);\r\n    }\r\n\r\n    // Границы области\r\n    this.x = Math.max(this.size, Math.min(width - this.size, this.x));\r\n    this.y = Math.max(this.size, Math.min(height - this.size, this.y));\r\n  }\r\n}\r\n  \r\n  avoidObstacles(stalls, humans, cashiers) {\r\n  let avoidanceForceX = 0;\r\n  let avoidanceForceY = 0;\r\n  const personalSpace = this.size * 2;\r\n\r\n  // Избегание других покупателей\r\n  for (const otherHuman of humans) {\r\n    if (otherHuman !== this && otherHuman !== null) {\r\n      const distToHuman = calculateDistance(this.x, this.y, otherHuman.x, otherHuman.y);\r\n      if (distToHuman < personalSpace) {\r\n        const forceMagnitude = (personalSpace - distToHuman) * 0.5;\r\n        avoidanceForceX += forceMagnitude * (this.x - otherHuman.x) / distToHuman;\r\n        avoidanceForceY += forceMagnitude * (this.y - otherHuman.y) / distToHuman;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (this.bypassingYRect) {\r\n    const distToTop = Math.abs(this.y - (this.bypassingYRect.y - personalSpace * 2));\r\n    const distToBottom = Math.abs(this.y - (this.bypassingYRect.y + this.bypassingYRect.height + personalSpace * 2));\r\n    avoidanceForceY += distToTop < distToBottom ? -this.speed : this.speed;\r\n    if (distToTop < this.size || distToBottom < this.size){\r\n      avoidanceForceY = 0;\r\n      avoidanceForceX = this.x > this.targetX ? -this.speed : this.speed; \r\n    }\r\n    if (!this.isBehindRect(this.bypassingYRect)){\r\n      this.bypassingYRect = null;\r\n    }\r\n  }\r\n  else if (this.bypassingXRect) {\r\n    const distToLeft = Math.abs(this.x - (this.bypassingXRect.x - personalSpace * 2));\r\n    const distToRight = Math.abs(this.x - (this.bypassingXRect.x + this.bypassingXRect.width + personalSpace * 2));\r\n    avoidanceForceX += distToLeft < distToRight ? -this.speed : this.speed;\r\n    if (distToLeft < this.size * 2 || distToRight < this.size * 2){\r\n      avoidanceForceX = 0;\r\n      avoidanceForceY = this.y > this.targetY ? -this.speed : this.speed; \r\n    }\r\n    if (!this.isAtSideRect(this.bypassingXRect)){\r\n      this.bypassingXRect = null;\r\n    }\r\n  }\r\n  // Проверяем, находится ли цель за прилавком\r\n  else if (this.targetX && this.targetY) {\r\n    for (const stall of stalls) {\r\n      // Если цель находится за этим прилавком\r\n      if (this.isBehindRect(stall)) {\r\n        this.bypassingYRect = stall;\r\n        break;\r\n      }\r\n      if (this.isAtSideRect(stall)) {\r\n        this.bypassingXRect = stall;\r\n        break;\r\n      }\r\n    }\r\n    for (const cashier of cashiers) {\r\n      if (this.isBehindRect(cashier)) {\r\n        this.bypassingYRect = cashier;\r\n        break;\r\n      }\r\n      if (this.isAtSideRect(cashier)) {\r\n        this.bypassingXRect = cashier;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return [avoidanceForceX, avoidanceForceY];\r\n}\r\n\r\n// Проверяет, находится ли цель за указанным прилавком\r\nisBehindRect(rect) {\r\n  // Проверяем, находится ли цель за прилавком по оси X\r\n  const isBehindX = (this.x - this.size * 2 < rect.x && this.targetX > rect.x + rect.width) ||\r\n                   (this.x > rect.x + rect.width - this.size * 2 && this.targetX < rect.x);\r\n  // Проверяем, находимся ли мы перед прилавком\r\n  const isInFrontOfRect = this.y >= rect.y - this.size * 4 && this.y <= rect.y + rect.height + this.size * 4;\r\n  \r\n  return isBehindX && isInFrontOfRect;\r\n}\r\n\r\nisAtSideRect(rect) {\r\n  const isAtSideY = (this.y - this.size * 2 < rect.y && this.targetY > rect.y + rect.height) ||\r\n                   (this.y > rect.y + rect.height - this.size * 2 && this.targetY < rect.y);\r\n  // Проверяем, находимся ли мы перед прилавком\r\n  const isAtSideX = this.x >= rect.x - this.size * 4 && this.x <= rect.x + rect.width + this.size * 4;\r\n  return isAtSideX && isAtSideY;\r\n}\r\n  \r\n  findNearestStall(stalls) {\r\n    if (!stalls || stalls.length === 0) return null;\r\n    \r\n    let nearestStall = null;\r\n    let shortestDistance = Infinity;\r\n    \r\n    for (const stall of stalls) {\r\n      const distance = stall.calculateDistanceToStall(this.x, this.y);\r\n      if (distance < shortestDistance) {\r\n        shortestDistance = distance;\r\n        nearestStall = stall;\r\n      }\r\n    }\r\n    \r\n    return nearestStall;\r\n  }\r\n  \r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Customer extends Human {\r\n  constructor(x, y, speed, productsAmountToBuy, productsCount) {\r\n    super(x, y, speed);\r\n    this.color = '#FF8C00';\r\n    this.uselessProductsCount = 0;\r\n    this.productsToBuy = [];\r\n    this.productsTaken = [];\r\n    this.checkedStallsIDs = [];\r\n    this.checking = false;\r\n    this.state = 'shopping'; // 'shopping', 'avoiding', 'goingToCashier', 'leaving'\r\n    this.timeSpent = 0;\r\n    this.totalSpent = 0;\r\n    this.currentProductTarget = null;\r\n    this.nearestStallData = [];\r\n    this.bestCashier = null;\r\n    \r\n    for (let i = 0; i < productsAmountToBuy; i++) {\r\n      this.productsToBuy.push(Math.floor(Math.random() * (productsCount - 1) + 1.1));\r\n    }\r\n  }\r\n  findNearestStallToCheck(stalls, stallsHeight, stallsWidth) {\r\n    const nearestStall = super.findNearestStall(stalls);\r\n    const nearestStallData = [nearestStall];\r\n    \r\n    if (nearestStall != null && !this.checkedStallsIDs.includes(nearestStall.ID) && !this.checking) {\r\n      if (Math.abs(this.x - nearestStall.x) < Math.abs(this.x - nearestStall.x - stallsWidth)) \r\n        nearestStallData.push(nearestStall.x - this.size * 2);\r\n      else \r\n        nearestStallData.push(nearestStall.x + stallsWidth + this.size * 2);\r\n      nearestStallData.push(nearestStall.y + Math.random() * stallsHeight);\r\n      return nearestStallData;\r\n    } else if (stalls.length >= 1 && nearestStall != null) {\r\n      let newStalls = stalls.filter(item => item.ID !== nearestStall.ID);\r\n      return this.findNearestStallToCheck(newStalls, stallsHeight, stallsWidth);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  checkStalls(height, stalls, stallsHeight, stallsWidth, cashiers) {\r\n    if (this.state === 'leaving' && height - this.y < this.size * 2) {\r\n      this.left = true;\r\n    }\r\n    if (this.bypassingXRect || this.bypassingYRect || this.state === 'leaving') return;\r\n    if (this.state === 'shopping') {\r\n      // Если нет текущей цели, ищем новый прилавк\r\n      if (!this.currentProductTarget) {\r\n        if (this.nearestStallData.length === 0)\r\n            this.nearestStallData = this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\r\n        else if (this.checkedStallsIDs.includes(this.nearestStallData[0].ID))\r\n          this.nearestStallData = this.findNearestStallToCheck(stalls, stallsHeight, stallsWidth);\r\n        if (!this.nearestStallData) {\r\n          // Нет больше прилавков для проверки - идем на кассу\r\n          this.goToCashier(cashiers);\r\n          return;\r\n        }\r\n        \r\n        const [nearestStall, targetX, targetY] = this.nearestStallData;\r\n        this.targetX = targetX;\r\n        this.targetY = targetY;\r\n        this.currentStall = nearestStall;\r\n      }\r\n\r\n      // Проверяем расстояние до текущей цели\r\n      const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\r\n      \r\n      if (distance < this.size * 4) {\r\n        // Достигли цели - либо прилавка, либо товара\r\n        if (this.currentProductTarget) {\r\n          // Берем товар\r\n          this.takeProduct(this.currentProductTarget);\r\n          this.currentProductTarget = null;\r\n          \r\n          // Проверяем, есть ли еще товары в этом прилавке\r\n          const nextProduct = this.checkForProducts(this.currentStall)[0];\r\n          if (nextProduct) {\r\n            this.currentProductTarget = nextProduct;\r\n            this.targetX = nextProduct.x > this.x ? nextProduct.x - this.size * 2 : nextProduct.x + this.size * 2;\r\n            this.targetY = nextProduct.y;\r\n          } else {\r\n            // Товаров больше нет - отмечаем прилавк как проверенный\r\n            this.checkedStallsIDs.push(this.currentStall.ID);\r\n            this.currentStall = null;\r\n          }\r\n        } else {\r\n          // Достигли прилавка - ищем товары\r\n          const products = this.checkForProducts(this.currentStall);\r\n          if (products.length > 0) {\r\n            this.currentProductTarget = products[0];\r\n            this.targetX = this.x < this.currentStall.x ? products[0].x - this.size * 2 : products[0].x + this.size * 2;\r\n            this.targetY = products[0].y;\r\n          } else {\r\n            // Нет товаров - отмечаем прилавк как проверенный\r\n            this.checkedStallsIDs.push(this.currentStall.ID);\r\n            this.currentStall = null;\r\n          }\r\n        }\r\n      }\r\n    } else if (this.state === 'goingToCashier') {\r\n      this.goToCashier(cashiers);\r\n      const distance = calculateDistance(this.x, this.y, this.targetX, this.targetY);\r\n      if (distance < this.size * 4) {\r\n        this.state = 'inQueue';\r\n        this.bestCashier.queue.push(this);\r\n      }\r\n    }\r\n    else if (this.state === 'inQueue') this.timeSpent++;\r\n  }\r\n  \r\n  goToCashier(cashiers) {\r\n    if (cashiers.length === 0) {\r\n      this.state = 'leaving';\r\n      this.targetX = this.x;\r\n      this.targetY = 700;\r\n      return;\r\n    }\r\n    \r\n    // Find cashier with shortest queue\r\n    let bestCashier = cashiers[0];\r\n    if (this.bestCashier)\r\n      bestCashier = this.bestCashier;\r\n    for (const cashier of cashiers) {\r\n      if (cashier.queue.length < bestCashier.queue.length) {\r\n        bestCashier = cashier;\r\n      }\r\n    }\r\n    \r\n    this.targetX = bestCashier.x - this.size;\r\n    this.targetY = bestCashier.y + bestCashier.height / 2;\r\n    this.state = 'goingToCashier';\r\n    this.bestCashier = bestCashier;\r\n  }\r\n  \r\n  takeProduct(product) {\r\n    if (this.money < product.cost) return false;\r\n    \r\n    this.productsTaken.push(product);\r\n    this.money -= product.cost;\r\n    this.totalSpent += product.cost;\r\n    \r\n    // Удаляем товар из прилавка\r\n    const productIndex = product.stall.products.indexOf(product);\r\n    if (productIndex !== -1) {\r\n      product.stall.productsToRestock.push(product);\r\n      product.stall.products.splice(productIndex, 1);\r\n    }\r\n    \r\n    // Проверяем привлекательные соседние товары\r\n    const nearbyProducts = product.checkNearby();\r\n    for (const nearbyProduct of nearbyProducts) {\r\n      if (Math.random() * 100 < nearbyProduct.attractive && \r\n          this.money >= nearbyProduct.cost &&\r\n          !this.productsTaken.includes(nearbyProduct)) {\r\n        this.uselessProductsCount++;\r\n        this.productsTaken.push(nearbyProduct);\r\n        this.money -= nearbyProduct.cost;\r\n        this.totalSpent += nearbyProduct.cost;\r\n        \r\n        // Удаляем соседний товар\r\n        const nearbyIndex = nearbyProduct.stall.products.indexOf(nearbyProduct);\r\n        if (nearbyIndex !== -1) {\r\n          nearbyProduct.stall.products.splice(nearbyIndex, 1);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  checkForProducts(stall) {\r\n    if (!stall) return [];\r\n    \r\n    let availableProducts = stall.products.filter(product => \r\n      this.productsToBuy.includes(product.ID) && \r\n      !this.productsTaken.includes(product)\r\n    );\r\n    \r\n    // Сортируем по расстоянию до покупателя\r\n    availableProducts = sortByDistance(this.x, this.y, availableProducts);\r\n    \r\n    return availableProducts;\r\n  }\r\n  \r\n  leaveStore(height) {\r\n    this.state = 'leaving';\r\n    this.targetX = this.x;\r\n    this.targetY = height;\r\n  }\r\n  \r\n  draw(ctx) {\r\n    if (this.state !== 'inQueue'){\r\n      super.draw(ctx);\r\n      \r\n      // Draw basket contents\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y - 10, this.productsTaken.length, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n  }\r\n}\r\n\r\nclass Manager extends Human {\r\n  constructor(x, y, speed) {\r\n    super(x, y, speed);\r\n      this.color = '#5c0bb2';\r\n      this.currentProductTarget = null;\r\n      this.state = 'restocking';\r\n  }\r\n\r\n  isAnotherManagerTarget(product, managers) {\r\n    for (const manager of managers) {\r\n      if (manager !== this && manager.currentProductTarget === product)\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  restockProducts(nearestProduct) {\r\n    if (!nearestProduct && !this.currentProductTarget)\r\n      return;\r\n    if (!this.currentProductTarget)\r\n      this.currentProductTarget = nearestProduct;\r\n  \r\n    const product = this.currentProductTarget;\r\n    const closestX = product.x > this.x ? product.x - this.size * 2 : product.x + this.size * 2;\r\n    this.targetX = closestX;\r\n    this.targetY = product.y;\r\n    const distance = calculateDistance(this.x, this.y, closestX, product.y);\r\n    if (distance < this.size * 2) {\r\n      let productIndex = product.ID - product.stall.products[0].ID;\r\n      product.stall.products.splice(productIndex, 0, product);\r\n      product.stall.productsToRestock = product.stall.productsToRestock.filter(p => p !== product);\r\n      this.currentProductTarget = null;\r\n    }\r\n  }\r\n\r\n  leaveStore() {\r\n    this.targetX = this.x;\r\n    this.targetY = 0;\r\n    if (calculateDistance(this.x, this.y, this.targetX, this.targetY) < this.size * 2) {\r\n      this.left = true;\r\n    }\r\n  }\r\n\r\n  searchForProductsToRestock(stalls, managers) {\r\n    if (this.state === 'restocking') {\r\n      if (this.currentProductTarget) {\r\n        this.restockProducts(null);\r\n        return;\r\n      }\r\n      let nearestProduct = null;\r\n      const nearestStall = super.findNearestStall(stalls);\r\n      if (nearestStall && nearestStall.productsToRestock.length > 0) {\r\n        const productsToRestock = sortByDistance(this.x, this.y, nearestStall.productsToRestock);\r\n        let i = 0;\r\n        while (!nearestProduct || this.isAnotherManagerTarget(nearestProduct, managers)) {\r\n          nearestProduct = productsToRestock[i];\r\n          i++;\r\n          if (i >= productsToRestock.length)\r\n            break;\r\n        }\r\n        this.restockProducts(nearestProduct);\r\n      }\r\n      else if (nearestStall) {\r\n        const newStalls = stalls.filter(s => s !== nearestStall);\r\n        this.searchForProductsToRestock(newStalls, managers);\r\n      }\r\n      else this.state = 'leaving';\r\n    }\r\n    else if (this.state === 'leaving')\r\n      this.leaveStore();\r\n  }\r\n}\r\n\r\nfunction calculateDistance(x1, y1, x2, y2) {\r\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n}\r\n\r\nfunction sortByDistance(x, y, list) {\r\n    list.sort((a, b) => \r\n      calculateDistance(x, y, a.x, a.y) - \r\n      calculateDistance(x, y, b.x, b.y)\r\n    );\r\n    return list;\r\n  }\r\n\r\nconst Simulation = () => {\r\n  const canvasRef = useRef(null);\r\n  const stallsRef = useRef([]);\r\n  const customersRef = useRef([]);\r\n  const cashiersRef = useRef([]);\r\n  const managersRef = useRef([]);\r\n  const [stats, setStats] = useState({\r\n    totalRevenue: 0,\r\n    customersServed: 0,\r\n    averageSpending: 0,\r\n    uselessProductsSold: 0,\r\n    activeCustomers: 0,\r\n    activeManagers: 0\r\n  });\r\n  \r\n  const [params, setParams] = useState({\r\n    stallsCount: 5,\r\n    width: 1200,\r\n    height: 675,\r\n    stallsWidth: 20,\r\n    stallsHeight: 425,\r\n    isRunning: true,\r\n    customersCount: 5,\r\n    speed: 1,\r\n    cashiersCount: 2,\r\n    spawnRate: 100\r\n  });\r\n  \r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n  const spawnTimerRef = useRef(0);\r\n\r\n  const initSimulation = () => {\r\n    const newStalls = [];\r\n    const newProducts = [];\r\n    const newCustomers = [];\r\n    const newCashiers = [];\r\n    \r\n    let distBetweenStalls = (params.width - params.stallsCount * params.stallsWidth) / (params.stallsCount - 1);\r\n    \r\n    for (let i = 0; i < params.stallsCount; i++) {\r\n      if (params.stallsCount === 1) distBetweenStalls = 0;\r\n      const newStall = new Stall(\r\n        i * params.stallsWidth + i * distBetweenStalls,\r\n        50,\r\n        params.stallsWidth,\r\n        params.stallsHeight,\r\n        i + 1\r\n      );\r\n      newStalls.push(newStall);\r\n      \r\n      for (let j = 0; j < params.stallsHeight / 12; j++) {\r\n        const newProduct = new Product(\r\n          i * params.stallsWidth + i * distBetweenStalls + params.stallsWidth / 2,\r\n          50 + j * 12 + 3,\r\n          Math.random() * 100 + 10,\r\n          (j + 1) + i * (Math.floor(params.stallsHeight / 12) + 1),\r\n          newStall,\r\n          Math.random() <= 0.5 ? 0 : Math.random() * 90\r\n        );\r\n        newStall.products.push(newProduct);\r\n        newProducts.push(newProduct);\r\n      }\r\n    }\r\n    \r\n    const cashierWidth = 30;\r\n    const cashierHeight = 50;\r\n    const cashierSpacing = 50;\r\n    const totalCashiersWidth = params.cashiersCount * cashierWidth + (params.cashiersCount - 1) * cashierSpacing;\r\n    const startX = (params.width - totalCashiersWidth) / 2;\r\n    \r\n    for (let i = 0; i < params.cashiersCount; i++) {\r\n      const newCashier = new Cashier(\r\n        startX + i * (cashierWidth + cashierSpacing),\r\n        params.height - 100,\r\n        cashierWidth,\r\n        cashierHeight\r\n      );\r\n      newCashiers.push(newCashier);\r\n    }\r\n    \r\n    for (let i = 0; i < params.customersCount; i++) {\r\n      newCustomers.push(new Customer(\r\n        Math.random() * params.width,\r\n        params.height - 6,\r\n        params.speed,\r\n        Math.floor(Math.random() * 3) + 1,\r\n        newProducts.length,\r\n      ));\r\n    }\r\n    \r\n    customersRef.current = newCustomers;\r\n    stallsRef.current = newStalls;\r\n    cashiersRef.current = newCashiers;\r\n    setVisibleCount(newProducts.length);\r\n    spawnTimerRef.current = 0;\r\n    managersRef.current = [];\r\n    \r\n    setStats({\r\n      totalRevenue: 0,\r\n      customersServed: 0,\r\n      averageSpending: 0,\r\n      uselessProductsSold: 0,\r\n      activeCustomers: newCustomers.length,\r\n      activeManagers: 0\r\n    });\r\n  };\r\n  \r\n  const handleParamChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParams(prev => ({\r\n      ...prev,\r\n      [name]: parseFloat(value)\r\n    }));\r\n  };\r\n  \r\n  const toggleSimulation = () => {\r\n    setParams(prev => ({\r\n      ...prev,\r\n      isRunning: !prev.isRunning\r\n    }));\r\n  };\r\n  \r\n  useEffect(() => {\r\n    initSimulation();\r\n  }, [params.stallsCount, params.cashiersCount]);\r\n  \r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n    \r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      \r\n      // Process cashiers\r\n      cashiersRef.current.forEach(cashier => {\r\n        const finishedCustomer = cashier.processCustomer();\r\n        if (finishedCustomer) {\r\n          finishedCustomer.leaveStore(params.height);\r\n          setStats(prev => ({\r\n            ...prev,\r\n            totalRevenue: prev.totalRevenue + finishedCustomer.totalSpent,\r\n            customersServed: prev.customersServed + 1,\r\n            uselessProductsSold: prev.uselessProductsSold + finishedCustomer.uselessProductsCount,\r\n            averageSpending: prev.customersServed > 0 ? \r\n              (prev.averageSpending * prev.customersServed + finishedCustomer.totalSpent) / (prev.customersServed + 1) : \r\n              finishedCustomer.totalSpent\r\n          }));\r\n        }\r\n      });\r\n\r\n      // Draw stalls and products\r\n      stallsRef.current.forEach(p => {\r\n        p.draw(ctx);\r\n        p.products.forEach(pr => pr.draw(ctx));\r\n      });\r\n      \r\n      // Draw cashiers\r\n      cashiersRef.current.forEach(c => c.draw(ctx));\r\n      \r\n      // Move and draw customers\r\n      const currentHumans = customersRef.current.concat(managersRef.current);\r\n      customersRef.current.forEach(c => {\r\n        c.checkStalls(params.height,\r\n          stallsRef.current, \r\n          params.stallsHeight, \r\n          params.stallsWidth, \r\n          cashiersRef.current\r\n        );\r\n        c.move(canvas.width, canvas.height, stallsRef.current, currentHumans, cashiersRef.current);\r\n        c.draw(ctx);\r\n      });\r\n\r\n      managersRef.current.forEach(m => {\r\n        m.searchForProductsToRestock(stallsRef.current, managersRef.current);\r\n        m.move(canvas.width, canvas.height, stallsRef.current, currentHumans, cashiersRef.current);\r\n        m.draw(ctx);\r\n      })\r\n\r\n      customersRef.current = customersRef.current.filter(c => !c.left);\r\n      managersRef.current = managersRef.current.filter(m => !m.left);\r\n\r\n      let productCount = 0;\r\n      const maxProductCount = Math.ceil(params.stallsHeight / 12) * params.stallsCount;\r\n      stallsRef.current.forEach(stall => {\r\n        productCount += stall.products.length;\r\n      });\r\n      setVisibleCount(productCount);\r\n      \r\n      if (productCount < maxProductCount) {\r\n        const productsPerStall = maxProductCount / params.stallsCount;\r\n        if (productCount < productsPerStall * (params.stallsCount - managersRef.current.length)) {\r\n          managersRef.current.push(new Manager(Math.random() * params.width, 0, params.speed * 1.5));    \r\n        }\r\n      }\r\n\r\n      if (params.isRunning) {\r\n        spawnTimerRef.current++;\r\n        if (spawnTimerRef.current > params.spawnRate && customersRef.current.length < 50) {\r\n          const newCustomer = new Customer(\r\n            Math.random() * params.width,\r\n            params.height - 6,\r\n            params.speed,\r\n            Math.floor(Math.random() * 3) + 1,\r\n            stallsRef.current.reduce((acc, stall) => acc + stall.products.length, 0),\r\n            Math.random() * 2 + 1\r\n          );\r\n          customersRef.current.push(newCustomer);\r\n          spawnTimerRef.current = 0;\r\n        }\r\n      }\r\n      \r\n      setStats(prev => ({\r\n            ...prev,\r\n            activeCustomers: customersRef.current.length,\r\n            activeManagers: managersRef.current.length\r\n          }));\r\n      \r\n      if (params.isRunning) {\r\n        animationFrameId = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    \r\n    if (params.isRunning) {\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    } else {\r\n      // Draw current state when paused\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      stallsRef.current.forEach(p => p.draw(ctx));\r\n      stallsRef.current.forEach(p => p.products.forEach(pr => pr.draw(ctx)));\r\n      cashiersRef.current.forEach(c => c.draw(ctx));\r\n      customersRef.current.forEach(c => c.draw(ctx));\r\n      managersRef.current.forEach(m => m.draw(ctx));\r\n    }\r\n    \r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [params.isRunning, params.stallsHeight, params.stallsWidth, params.spawnRate, params.height, params.width, params.speed, params.stallsCount]);\r\n  \r\n  return (\r\n    <div className=\"simulation-container\">\r\n      <div className=\"controls\">\r\n        <h2>Управление симуляцией</h2>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество отделов:\r\n            <input\r\n              type=\"range\"\r\n              name=\"stallsCount\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={params.stallsCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.stallsCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Количество касс:\r\n            <input\r\n              type=\"range\"\r\n              name=\"cashiersCount\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n              value={params.cashiersCount}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.cashiersCount}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Скорость покупателей:\r\n            <input\r\n              type=\"range\"\r\n              name=\"speed\"\r\n              min=\"0.5\"\r\n              max=\"5\"\r\n              step=\"0.1\"\r\n              value={params.speed}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.speed.toFixed(1)}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"control-group\">\r\n          <label>\r\n            Частота появления:\r\n            <input\r\n              type=\"range\"\r\n              name=\"spawnRate\"\r\n              min=\"10\"\r\n              max=\"300\"\r\n              value={params.spawnRate}\r\n              onChange={handleParamChange}\r\n            />\r\n            {params.spawnRate}\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"buttons\">\r\n          <button onClick={initSimulation}>Сбросить</button>\r\n          <button onClick={toggleSimulation}>\r\n            {params.isRunning ? 'Пауза' : 'Старт'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"stats\">\r\n          <h3>Статистика магазина</h3>\r\n          <p>Выручка: ${stats.totalRevenue.toFixed(2)}</p>\r\n          <p>Обслужено покупателей: {stats.customersServed}</p>\r\n          <p>Средний чек: ${stats.averageSpending.toFixed(2)}</p>\r\n          <p>Ненужных товаров продано: {stats.uselessProductsSold}</p>\r\n          <p>Покупателей в магазине: {stats.activeCustomers}</p>\r\n          <p>Менеджеров в магазине: {stats.activeManagers}</p>\r\n          <p>Товаров на полках: {visibleCount}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"simulation-area\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={params.width}\r\n          height={params.height}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Simulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}